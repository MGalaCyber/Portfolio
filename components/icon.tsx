'use client'

//=======================================================| SOCIAL MEDIA |=======================================================\\
export function RiInstagramFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M13.028 2c1.125.003 1.696.009 2.189.023l.194.007c.224.008.445.018.712.03c1.064.05 1.79.218 2.427.465c.66.254 1.216.598 1.772 1.153a4.9 4.9 0 0 1 1.153 1.772c.247.637.415 1.363.465 2.428c.012.266.022.487.03.712l.006.194c.015.492.021 1.063.023 2.188l.001.746v1.31a79 79 0 0 1-.023 2.188l-.006.194c-.008.225-.018.446-.03.712c-.05 1.065-.22 1.79-.466 2.428a4.9 4.9 0 0 1-1.153 1.772a4.9 4.9 0 0 1-1.772 1.153c-.637.247-1.363.415-2.427.465l-.712.03l-.194.006c-.493.014-1.064.021-2.189.023l-.746.001h-1.309a78 78 0 0 1-2.189-.023l-.194-.006a63 63 0 0 1-.712-.031c-1.064-.05-1.79-.218-2.428-.465a4.9 4.9 0 0 1-1.771-1.153a4.9 4.9 0 0 1-1.154-1.772c-.247-.637-.415-1.363-.465-2.428l-.03-.712l-.005-.194A79 79 0 0 1 2 13.028v-2.056a79 79 0 0 1 .022-2.188l.007-.194c.008-.225.018-.446.03-.712c.05-1.065.218-1.79.465-2.428A4.9 4.9 0 0 1 3.68 3.678a4.9 4.9 0 0 1 1.77-1.153c.638-.247 1.363-.415 2.428-.465c.266-.012.488-.022.712-.03l.194-.006a79 79 0 0 1 2.188-.023zM12 7a5 5 0 1 0 0 10a5 5 0 0 0 0-10m0 2a3 3 0 1 1 .001 6a3 3 0 0 1 0-6m5.25-3.5a1.25 1.25 0 0 0 0 2.5a1.25 1.25 0 0 0 0-2.5"></path></svg>
    )
}

export function RiFacebookBoxFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M15.402 21v-6.966h2.333l.349-2.708h-2.682V9.599c0-.784.218-1.319 1.342-1.319h1.434V5.857a19 19 0 0 0-2.09-.107c-2.067 0-3.482 1.262-3.482 3.58v1.996h-2.338v2.708h2.338V21H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1z"></path></svg>
    )
}

export function RiTiktokFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M16 8.245V15.5a6.5 6.5 0 1 1-5-6.326v3.163a3.5 3.5 0 1 0 2 3.163V2h3a5 5 0 0 0 5 5v3a7.97 7.97 0 0 1-5-1.755"></path></svg>
    )
}

export function RiBlueskyFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12 11.388c-.906-1.761-3.372-5.044-5.665-6.662c-2.197-1.55-3.034-1.283-3.583-1.033C2.116 3.978 2 4.955 2 5.528c0 .575.315 4.709.52 5.4c.68 2.28 3.094 3.05 5.32 2.803c-3.26.483-6.157 1.67-2.36 5.898c4.178 4.325 5.726-.927 6.52-3.59c.794 2.663 1.708 7.726 6.444 3.59c3.556-3.59.977-5.415-2.283-5.898c2.225.247 4.64-.523 5.319-2.803c.205-.69.52-4.825.52-5.399c0-.575-.116-1.55-.752-1.838c-.549-.248-1.386-.517-3.583 1.033c-2.293 1.621-4.76 4.904-5.665 6.664"></path></svg>
    )
}

export function RiLinkedinBoxFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className}{...props}><path fill="currentColor" d="M18.336 18.339h-2.665v-4.177c0-.996-.02-2.278-1.39-2.278c-1.389 0-1.601 1.084-1.601 2.205v4.25h-2.666V9.75h2.56v1.17h.035c.358-.674 1.228-1.387 2.528-1.387c2.7 0 3.2 1.778 3.2 4.092v4.714M7.004 8.575a1.546 1.546 0 0 1-1.548-1.549a1.548 1.548 0 1 1 1.547 1.549m1.336 9.764H5.667V9.75H8.34zM19.67 3H4.33C3.594 3 3 3.58 3 4.297v15.406C3 20.42 3.594 21 4.328 21h15.339C20.4 21 21 20.42 21 19.703V4.297C21 3.581 20.4 3 19.666 3z"></path></svg>
    )
}

export function RiSnapchatFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M11.872 21.765c-1.19 0-1.984-.562-2.693-1.057c-.504-.357-.976-.696-1.533-.79a4.6 4.6 0 0 0-.803-.066c-.472 0-.847.071-1.114.125c-.17.03-.312.058-.424.058c-.116 0-.263-.032-.32-.228c-.05-.16-.081-.312-.112-.459c-.08-.37-.147-.597-.286-.62c-1.489-.227-2.38-.57-2.554-.976c-.014-.044-.031-.09-.031-.125c-.01-.124.08-.227.205-.25c1.181-.195 2.242-.824 3.138-1.858c.696-.803 1.035-1.579 1.066-1.663c0-.01.009-.01.009-.01q.256-.527.102-.895c-.192-.46-.825-.656-1.257-.79c-.111-.03-.205-.066-.285-.093c-.37-.147-.986-.46-.905-.892c.058-.312.472-.535.811-.535q.141-.002.24.05c.38.173.723.262 1.017.262c.366 0 .54-.138.584-.182a25 25 0 0 0-.035-.593c-.09-1.365-.192-3.059.24-4.03c1.298-2.907 4.053-3.14 4.869-3.14L12.157 3h.05c.815 0 3.57.227 4.868 3.139c.437.971.33 2.67.24 4.03l-.009.067c-.008.182-.022.356-.03.535c.044.035.204.169.534.173c.286-.008.598-.102.954-.263a.8.8 0 0 1 .312-.066c.125 0 .25.03.357.066h.009c.299.112.495.321.495.54c.009.205-.152.517-.914.825c-.08.03-.174.067-.285.093c-.424.13-1.057.335-1.258.79c-.111.24-.067.548.103.896c0 .008.009.008.009.008c.049.125 1.337 3.05 4.204 3.527a.246.246 0 0 1 .205.25q.001.067-.031.129c-.174.41-1.057.744-2.555.976c-.138.022-.205.25-.285.62a7 7 0 0 1-.111.459c-.045.147-.139.227-.3.227h-.021a2.2 2.2 0 0 1-.424-.049a5.3 5.3 0 0 0-1.115-.116a5 5 0 0 0-.802.067c-.553.09-1.03.433-1.534.79c-.718.49-1.516 1.052-2.697 1.052z"></path></svg>
    )
}

export function RiWechatFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M18.575 13.711a.91.91 0 0 0 .898-.898a.895.895 0 0 0-.898-.898a.894.894 0 0 0-.898.898c0 .5.4.898.898.898m-4.425 0a.91.91 0 0 0 .898-.898c0-.498-.4-.898-.898-.898a.894.894 0 0 0-.898.898c0 .5.399.898.898.898m6.567 5.04a.35.35 0 0 0-.172.37c0 .048 0 .098.025.147c.098.417.294 1.081.294 1.106c0 .073.025.122.025.172a.22.22 0 0 1-.221.22c-.05 0-.074-.024-.123-.048l-1.449-.836a.8.8 0 0 0-.344-.098c-.073 0-.147 0-.196.024c-.688.197-1.4.295-2.161.295c-3.66 0-6.607-2.457-6.607-5.505s2.947-5.505 6.607-5.505c3.659 0 6.606 2.458 6.606 5.505c0 1.647-.884 3.146-2.284 4.154M16.674 8.099a9 9 0 0 0-.28-.005c-4.174 0-7.606 2.86-7.606 6.505c0 .554.08 1.09.228 1.6h-.089a10 10 0 0 1-2.584-.368c-.074-.025-.148-.025-.222-.025a.83.83 0 0 0-.419.123l-1.747 1.005a.35.35 0 0 1-.148.05a.273.273 0 0 1-.27-.27c0-.074.024-.123.049-.197c.024-.024.246-.834.369-1.324c0-.05.024-.123.024-.172a.56.56 0 0 0-.221-.441C2.059 13.376 1 11.586 1 9.599C1.001 5.944 4.571 3 8.951 3c3.765 0 6.93 2.169 7.723 5.098m-5.154.418c.573 0 1.026-.477 1.026-1.026c0-.573-.453-1.026-1.026-1.026s-1.026.453-1.026 1.026s.453 1.026 1.026 1.026m-5.26 0c.573 0 1.027-.477 1.027-1.026c0-.573-.454-1.026-1.027-1.026c-.572 0-1.026.453-1.026 1.026s.454 1.026 1.026 1.026"></path></svg>
    )
}

export function RiMessengerFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12.001 2c5.634 0 10 4.127 10 9.7s-4.367 9.7-10 9.7a11 11 0 0 1-2.895-.384a.8.8 0 0 0-.534.039l-1.985.876a.8.8 0 0 1-1.123-.707l-.054-1.78a.8.8 0 0 0-.269-.57c-1.945-1.74-3.14-4.258-3.14-7.174c0-5.573 4.366-9.7 10-9.7M5.996 14.537c-.282.447.268.951.689.631l3.155-2.394a.6.6 0 0 1 .723 0l2.336 1.75a1.5 1.5 0 0 0 2.17-.4l2.937-4.66c.282-.448-.268-.952-.689-.633l-3.155 2.396a.6.6 0 0 1-.723 0l-2.337-1.75a1.5 1.5 0 0 0-2.169.4z"></path></svg>
    )
}

export function RiTumblrFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M6.27 7.63A5.76 5.76 0 0 0 10.817 2h3.03v5.152h3.637v3.636h-3.637v5.454c0 .515.198 1.207.91 1.667q.711.46 3.03.455V22h-4.243a4.546 4.546 0 0 1-4.545-4.546v-6.666H6.27z"></path></svg>
    )
}

export function RiQqFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M19.914 14.529a32 32 0 0 0-.676-1.886l-.91-2.246c.002-.026.013-.468.013-.696C18.34 5.86 16.508 2 12 2S5.66 5.86 5.66 9.7c0 .229.011.671.012.697l-.91 2.246a32 32 0 0 0-.675 1.886c-.86 2.737-.581 3.87-.369 3.895c.455.054 1.771-2.06 1.771-2.06c0 1.224.637 2.822 2.016 3.976c-.515.157-1.147.399-1.554.695c-.365.267-.319.54-.253.65c.289.481 4.955.307 6.303.157c1.347.15 6.014.324 6.302-.158c.066-.11.112-.382-.253-.649c-.407-.296-1.039-.538-1.555-.695c1.379-1.154 2.016-2.752 2.016-3.977c0 0 1.316 2.115 1.771 2.06c.212-.025.49-1.157-.37-3.894"></path></svg>
    )
}

export function RiWeiboFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M4.278 8.592c2.773-2.77 6.004-4.033 7.219-2.816c.537.537.588 1.464.244 2.572c-.178.557.524.25.524.25c2.241-.938 4.197-.994 4.91.027c.38.542.343 1.306-.008 2.19c-.163.407.048.47.36.563c1.262.392 2.668 1.336 2.668 3.004c0 2.763-3.98 6.239-9.964 6.239c-4.565 0-9.23-2.213-9.23-5.852c0-1.902 1.204-4.102 3.277-6.177m12.133 5.742c-.237-2.391-3.382-4.039-7.023-3.677c-3.64.359-6.403 2.59-6.167 4.98c.237 2.394 3.382 4.039 7.023 3.68c3.641-.362 6.401-2.592 6.167-4.983m-10.249.104c.754-1.528 2.712-2.39 4.446-1.94c1.792.463 2.707 2.154 1.976 3.799c-.744 1.683-2.883 2.58-4.695 1.994c-1.752-.566-2.493-2.295-1.727-3.853m2.715.578c-.563-.237-1.291.008-1.64.553c-.354.547-.189 1.201.371 1.456c.568.257 1.325.013 1.676-.55c.346-.568.163-1.217-.408-1.459m1.387-.578c-.216-.084-.486.018-.613.232c-.123.214-.054.458.163.547c.219.092.501-.012.628-.231c.123-.22.044-.466-.178-.548m5.694-11.514A5.83 5.83 0 0 1 21.5 4.72a5.84 5.84 0 0 1 1.22 5.704a.84.84 0 0 1-1.06.54a.844.844 0 0 1-.542-1.062a4.142 4.142 0 0 0-4.808-5.327a.845.845 0 0 1-.353-1.65m.626 2.926a2.836 2.836 0 0 1 3.29 3.648a.725.725 0 1 1-1.378-.45a1.38 1.38 0 0 0-.287-1.357a1.4 1.4 0 0 0-1.322-.426a.723.723 0 1 1-.303-1.415"></path></svg>
    )
}

export function RiTwitchFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M21.001 3v11.74l-4.696 4.695h-3.913l-2.437 2.348H6.914v-2.348H3.001V6.13L4.228 3zm-1.565 1.565H6.13v11.74h3.13v2.347l2.349-2.348h4.695l3.13-3.13zm-3.13 3.13v4.696H14.74V7.696zm-3.914 0v4.696h-1.565V7.696z"></path></svg>
    )
}

export function RiLineFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M18.664 10.84a.526.526 0 0 1-.526.525h-1.462v.938h1.463a.525.525 0 1 1 0 1.049H16.15a.526.526 0 0 1-.522-.524V8.852c0-.287.235-.525.525-.525h1.988a.526.526 0 0 1-.002 1.05h-1.463v.938h1.463c.29 0 .524.237.524.525m-4.098 2.485a.5.5 0 0 1-.166.025a.52.52 0 0 1-.425-.208l-2.036-2.764v2.45a.525.525 0 0 1-1.047 0V8.852a.52.52 0 0 1 .52-.523c.162 0 .312.086.412.211l2.052 2.775V8.852c0-.287.235-.525.525-.525c.287 0 .525.238.525.525v3.976a.52.52 0 0 1-.36.497m-4.95.027a.526.526 0 0 1-.523-.524V8.852c0-.287.235-.525.525-.525c.289 0 .524.238.524.525v3.976a.527.527 0 0 1-.526.524m-1.53 0H6.099a.53.53 0 0 1-.525-.524V8.852c0-.287.238-.525.525-.525c.29 0 .525.238.525.525v3.45h1.464a.525.525 0 0 1 0 1.05m3.915-10.78c-5.513 0-10 3.643-10 8.118c0 4.01 3.558 7.369 8.363 8.007c.325.068.769.215.881.492c.1.25.066.638.032.9l-.137.85c-.037.25-.2.988.874.537c1.076-.449 5.764-3.398 7.864-5.812C21.314 14.089 22 12.477 22 10.69c0-4.475-4.488-8.118-10-8.118"></path></svg>
    )
}

export function RiSkypeFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M13.31 20.4q-.64.1-1.309.1a8.5 8.5 0 0 1-8.4-9.81a5.25 5.25 0 0 1 7.09-7.09q.642-.1 1.31-.1a8.5 8.5 0 0 1 8.4 9.81a5.25 5.25 0 0 1-7.09 7.09m-1.257-3.244h-.04c2.872 0 4.303-1.386 4.303-3.243c0-1.198-.551-2.471-2.726-2.958l-1.983-.44c-.755-.172-1.622-.4-1.622-1.115s.62-1.213 1.724-1.213c2.23 0 2.027 1.528 3.131 1.528c.576 0 1.093-.342 1.093-.93c0-1.37-2.197-2.4-4.056-2.4c-2.021 0-4.173.859-4.173 3.144c0 1.098.394 2.27 2.56 2.813l2.689.671c.816.202 1.018.659 1.018 1.072c0 .687-.684 1.358-1.918 1.358c-2.417 0-2.078-1.857-3.374-1.857c-.58 0-1.003.398-1.003.971c0 1.114 1.352 2.598 4.377 2.598"></path></svg>
    )
}

export function RiMastodonFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M21.26 13.99c-.275 1.41-2.457 2.955-4.963 3.254c-1.306.156-2.593.3-3.965.236c-2.244-.103-4.014-.535-4.014-.535q0 .328.04.62c.292 2.215 2.196 2.347 4 2.41c1.82.061 3.44-.45 3.44-.45l.075 1.646s-1.273.684-3.54.81c-1.252.068-2.805-.032-4.613-.51c-3.923-1.039-4.598-5.22-4.701-9.464c-.032-1.26-.012-2.447-.012-3.44c0-4.34 2.843-5.611 2.843-5.611C7.283 2.298 9.742 2.021 12.3 2h.062c2.557.02 5.018.298 6.451.956c0 0 2.843 1.272 2.843 5.61c0 0 .036 3.201-.396 5.424m-2.957-5.087q0-1.611-.823-2.558c-.566-.631-1.307-.955-2.228-.955c-1.065 0-1.872.41-2.405 1.228l-.518.87l-.519-.87C11.277 5.8 10.47 5.39 9.406 5.39c-.921 0-1.663.324-2.229.955q-.823.947-.822 2.558v5.253h2.081V9.057c0-1.075.452-1.62 1.357-1.62c1 0 1.501.647 1.501 1.927v2.79h2.07v-2.79c0-1.28.5-1.927 1.5-1.927c.905 0 1.358.545 1.358 1.62v5.1h2.08z"></path></svg>
    )
}

export function RiThreadsLine({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12.184 1.41h-.002C9.09 1.432 6.7 2.473 5.094 4.516c-1.428 1.815-2.16 4.348-2.184 7.49v.002c.025 3.143.756 5.662 2.184 7.477c1.606 2.042 4.009 3.084 7.1 3.105h.002c2.748-.019 4.697-.74 6.303-2.344c2.104-2.103 2.042-4.741 1.347-6.363c-.53-1.234-1.575-2.221-2.976-2.835c-.18-2.985-1.86-4.726-4.62-4.744c-1.63-.01-3.102.72-4.003 2.087l1.655 1.136c.533-.809 1.377-1.199 2.335-1.19c1.387.009 2.3.774 2.555 2.117a11.7 11.7 0 0 0-2.484-.105c-2.64.152-4.368 1.712-4.253 3.875c.12 2.262 2.312 3.495 4.393 3.381c2.492-.137 3.973-1.976 4.324-4.321c.577.373 1.003.85 1.244 1.413c.44 1.025.468 2.716-.915 4.098c-1.217 1.216-2.68 1.746-4.912 1.762c-2.475-.018-4.332-.811-5.537-2.343C5.52 16.774 4.928 14.688 4.906 12c.022-2.688.614-4.775 1.746-6.213c1.205-1.533 3.062-2.325 5.537-2.344c2.493.019 4.384.815 5.636 2.356c.691.85 1.124 1.866 1.413 2.915l1.94-.517c-.363-1.338-.937-2.613-1.815-3.694c-1.653-2.034-4.081-3.071-7.18-3.093m.236 10.968a9.4 9.4 0 0 1 2.432.156c-.14 1.578-.793 2.947-2.512 3.041c-1.112.063-2.237-.434-2.292-1.461c-.04-.764.525-1.63 2.372-1.736"></path></svg>
    )
}

export function RiTwitterXLine({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M8 2H1l8.26 11.015L1.45 22H4.1l6.388-7.349L16 22h7l-8.608-11.478L21.8 2h-2.65l-5.986 6.886zm9 18L5 4h2l12 16z"></path></svg>
    )
}

export function RiDiscordFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M19.303 5.337A17.3 17.3 0 0 0 14.963 4c-.191.329-.403.775-.552 1.125a16.6 16.6 0 0 0-4.808 0C9.454 4.775 9.23 4.329 9.05 4a17 17 0 0 0-4.342 1.337C1.961 9.391 1.218 13.35 1.59 17.255a17.7 17.7 0 0 0 5.318 2.664a13 13 0 0 0 1.136-1.836c-.627-.234-1.22-.52-1.794-.86c.149-.106.297-.223.435-.34c3.46 1.582 7.207 1.582 10.624 0c.149.117.287.234.435.34c-.573.34-1.167.626-1.793.86a13 13 0 0 0 1.135 1.836a17.6 17.6 0 0 0 5.318-2.664c.457-4.52-.722-8.448-3.1-11.918M8.52 14.846c-1.04 0-1.889-.945-1.889-2.101s.828-2.102 1.89-2.102c1.05 0 1.91.945 1.888 2.102c0 1.156-.838 2.1-1.889 2.1m6.974 0c-1.04 0-1.89-.945-1.89-2.101s.828-2.102 1.89-2.102c1.05 0 1.91.945 1.889 2.102c0 1.156-.828 2.1-1.89 2.1"></path></svg>
    )
}

export function RiDiscordOutline({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="800px" height="800px" viewBox="0 0 24 24" className={className} {...props}><path stroke="currentColor" strokeWidth="2" fill="none" d="M18.8943 4.34399C17.5183 3.71467 16.057 3.256 14.5317 3C14.3396 3.33067 14.1263 3.77866 13.977 4.13067C12.3546 3.89599 10.7439 3.89599 9.14391 4.13067C8.99457 3.77866 8.77056 3.33067 8.58922 3C7.05325 3.256 5.59191 3.71467 4.22552 4.34399C1.46286 8.41865 0.716188 12.3973 1.08952 16.3226C2.92418 17.6559 4.69486 18.4666 6.4346 19C6.86126 18.424 7.24527 17.8053 7.57594 17.1546C6.9466 16.92 6.34927 16.632 5.77327 16.2906C5.9226 16.184 6.07194 16.0667 6.21061 15.9493C9.68793 17.5387 13.4543 17.5387 16.889 15.9493C17.0383 16.0667 17.177 16.184 17.3263 16.2906C16.7503 16.632 16.153 16.92 15.5236 17.1546C15.8543 17.8053 16.2383 18.424 16.665 19C18.4036 18.4666 20.185 17.6559 22.01 16.3226C22.4687 11.7787 21.2836 7.83202 18.8943 4.34399ZM8.05593 13.9013C7.01058 13.9013 6.15725 12.952 6.15725 11.7893C6.15725 10.6267 6.98925 9.67731 8.05593 9.67731C9.11191 9.67731 9.97588 10.6267 9.95454 11.7893C9.95454 12.952 9.11191 13.9013 8.05593 13.9013ZM15.065 13.9013C14.0196 13.9013 13.1652 12.952 13.1652 11.7893C13.1652 10.6267 13.9983 9.67731 15.065 9.67731C16.121 9.67731 16.985 10.6267 16.9636 11.7893C16.9636 12.952 16.1317 13.9013 15.065 13.9013Z"/></svg>
    )
}

export function SimpleIconsGuilded({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M5.297 6.255s.02 2.846 1.481 5.79c1.502 2.834 3.572 4.654 5.28 5.38c1.765-.826 3.47-2.258 4.4-3.8h-4.845c-1.253-1.04-2.24-2.763-2.466-4.755H23.36c-.701 3.203-2.188 6.116-3.605 7.971a17.1 17.1 0 0 1-7.686 5.659h-.045c-5.098-2.031-7.84-5.23-9.65-8.84C1.214 11.347 0 7.147 0 1.5h24a34 34 0 0 1-.32 4.755z"></path></svg>
    )
}

export function RiYoutubeFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12.244 4c.534.003 1.87.016 3.29.073l.504.022c1.429.067 2.857.183 3.566.38c.945.266 1.687 1.04 1.938 2.022c.4 1.56.45 4.602.456 5.339l.001.152v.174c-.007.737-.057 3.78-.457 5.339c-.254.985-.997 1.76-1.938 2.022c-.709.197-2.137.313-3.566.38l-.504.023c-1.42.056-2.756.07-3.29.072l-.235.001h-.255c-1.13-.007-5.856-.058-7.36-.476c-.944-.266-1.687-1.04-1.938-2.022c-.4-1.56-.45-4.602-.456-5.339v-.326c.006-.737.056-3.78.456-5.339c.254-.985.997-1.76 1.939-2.021c1.503-.419 6.23-.47 7.36-.476zM9.999 8.5v7l6-3.5z"></path></svg>
    )
}

export function RiRedditFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12.001 22c-5.523 0-10-4.477-10-10s4.477-10 10-10s10 4.477 10 10s-4.477 10-10 10m6.67-10a1.46 1.46 0 0 0-2.47-1a7.1 7.1 0 0 0-3.85-1.23l.65-3.12l2.14.45a1 1 0 1 0 .13-.61L12.821 6a.31.31 0 0 0-.37.24l-.74 3.47a7.14 7.14 0 0 0-3.9 1.23a1.46 1.46 0 1 0-1.61 2.39a3 3 0 0 0 0 .44c0 2.24 2.61 4.06 5.83 4.06s5.83-1.82 5.83-4.06a3 3 0 0 0 0-.44a1.46 1.46 0 0 0 .81-1.33m-10 1a1 1 0 1 1 2 0a1 1 0 0 1-2 0m5.81 2.75a3.84 3.84 0 0 1-2.47.77a3.84 3.84 0 0 1-2.47-.77a.27.27 0 0 1 .38-.38a3.27 3.27 0 0 0 2.08.63a3.28 3.28 0 0 0 2.09-.61a.28.28 0 1 1 .39.4zm-.18-1.71a1 1 0 1 1 1-1a1 1 0 0 1-1.01 1.04z"></path></svg>
    )
}

export function RiGithubFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12.001 2c-5.525 0-10 4.475-10 10a9.99 9.99 0 0 0 6.837 9.488c.5.087.688-.213.688-.476c0-.237-.013-1.024-.013-1.862c-2.512.463-3.162-.612-3.362-1.175c-.113-.288-.6-1.175-1.025-1.413c-.35-.187-.85-.65-.013-.662c.788-.013 1.35.725 1.538 1.025c.9 1.512 2.337 1.087 2.912.825c.088-.65.35-1.087.638-1.337c-2.225-.25-4.55-1.113-4.55-4.938c0-1.088.387-1.987 1.025-2.687c-.1-.25-.45-1.275.1-2.65c0 0 .837-.263 2.75 1.024a9.3 9.3 0 0 1 2.5-.337c.85 0 1.7.112 2.5.337c1.913-1.3 2.75-1.024 2.75-1.024c.55 1.375.2 2.4.1 2.65c.637.7 1.025 1.587 1.025 2.687c0 3.838-2.337 4.688-4.562 4.938c.362.312.675.912.675 1.85c0 1.337-.013 2.412-.013 2.75c0 .262.188.574.688.474A10.02 10.02 0 0 0 22 12c0-5.525-4.475-10-10-10"></path></svg>
    )
}

export function RiNpmjsFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M20.001 3a1 1 0 0 1 1 1v16a1 1 0 0 1-1 1h-16a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1zm-3 4h-10v10h5V9.5h2.5V17h2.5z"></path></svg>
    )
}

export function RiCodepenFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12 10.202L9.303 12L12 13.798L14.697 12zm4.5.596L19.197 9L13 4.869v3.596zm3.5.07L18.303 12L20 13.132zm-3.5 2.334L13 15.535v3.596L19.197 15zM11 8.465V4.869L4.803 9L7.5 10.798zM4.803 15L11 19.131v-3.596l-3.5-2.333zm.894-3L4 10.868v2.264zM2 9a1 1 0 0 1 .445-.832l9-6a1 1 0 0 1 1.11 0l9 6A1 1 0 0 1 22 9v6a1 1 0 0 1-.445.832l-9 6a1 1 0 0 1-1.11 0l-9-6A1 1 0 0 1 2 15z"></path></svg>
    )
}

export function RiStackOverflowFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M18.001 20.003v-5.334h2v7.334h-16v-7.334h2v5.334zM7.6 14.736l.313-1.98l8.837 1.7l-.113 1.586zm1.2-4.532l.732-1.6l7.998 3.733l-.733 1.6zm2.265-3.932l1.133-1.333l6.798 5.665l-1.133 1.333zm4.332-4.132l5.265 7.064l-1.4 1.067l-5.264-7.065zM7.333 18.668v-2h9.33v2z"></path></svg>
    )
}

export function RiSpotifyFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12.001 2c-5.5 0-10 4.5-10 10s4.5 10 10 10s10-4.5 10-10s-4.45-10-10-10m3.75 14.65c-2.35-1.45-5.3-1.75-8.8-.95c-.35.1-.65-.15-.75-.45c-.1-.35.15-.65.45-.75c3.8-.85 7.1-.5 9.7 1.1c.35.15.4.55.25.85c-.2.3-.55.4-.85.2m1-2.7c-2.7-1.65-6.8-2.15-9.95-1.15c-.4.1-.85-.1-.95-.5s.1-.85.5-.95c3.65-1.1 8.15-.55 11.25 1.35c.3.15.45.65.2 1s-.7.5-1.05.25M6.3 9.75c-.5.15-1-.15-1.15-.6c-.15-.5.15-1 .6-1.15c3.55-1.05 9.4-.85 13.1 1.35c.45.25.6.85.35 1.3c-.25.35-.85.5-1.3.25C14.7 9 9.35 8.8 6.3 9.75"></path></svg>
    )
}

export function RiPinterestFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M13.372 2.094a10.003 10.003 0 0 0-5.369 19.074a7.8 7.8 0 0 1 .162-2.292c.185-.839 1.296-5.463 1.296-5.463a3.7 3.7 0 0 1-.324-1.577c0-1.485.857-2.593 1.923-2.593a1.334 1.334 0 0 1 1.342 1.508c0 .9-.578 2.262-.88 3.54a1.544 1.544 0 0 0 1.575 1.923c1.897 0 3.17-2.431 3.17-5.301c0-2.201-1.457-3.847-4.143-3.847a4.746 4.746 0 0 0-4.93 4.793a2.96 2.96 0 0 0 .648 1.97a.48.48 0 0 1 .162.554c-.046.184-.162.623-.208.785a.354.354 0 0 1-.51.253c-1.384-.554-2.036-2.077-2.036-3.816c0-2.847 2.384-6.255 7.154-6.255c3.796 0 6.319 2.777 6.319 5.747c0 3.909-2.176 6.848-5.393 6.848a2.86 2.86 0 0 1-2.454-1.246s-.579 2.316-.692 2.754a8 8 0 0 1-1.019 2.131c.923.28 1.882.42 2.846.416a9.99 9.99 0 0 0 9.996-10.002a10 10 0 0 0-8.635-9.904"></path></svg>
    )
}

export function RiWhatsappFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12.001 2c5.523 0 10 4.477 10 10s-4.477 10-10 10a9.95 9.95 0 0 1-5.03-1.355L2.005 22l1.352-4.968A9.95 9.95 0 0 1 2.001 12c0-5.523 4.477-10 10-10M8.593 7.3l-.2.008a1 1 0 0 0-.372.1a1.3 1.3 0 0 0-.294.228c-.12.113-.188.211-.261.306A2.73 2.73 0 0 0 6.9 9.62c.002.49.13.967.33 1.413c.409.902 1.082 1.857 1.97 2.742c.214.213.424.427.65.626a9.45 9.45 0 0 0 3.84 2.046l.568.087c.185.01.37-.004.556-.013a2 2 0 0 0 .833-.231a5 5 0 0 0 .383-.22q.001.002.125-.09c.135-.1.218-.171.33-.288q.126-.13.21-.302c.078-.163.156-.474.188-.733c.024-.198.017-.306.014-.373c-.004-.107-.093-.218-.19-.265l-.582-.261s-.87-.379-1.402-.621a.5.5 0 0 0-.176-.041a.48.48 0 0 0-.378.127c-.005-.002-.072.055-.795.931a.35.35 0 0 1-.368.13a1.4 1.4 0 0 1-.191-.066c-.124-.052-.167-.072-.252-.108a6 6 0 0 1-1.575-1.003c-.126-.11-.243-.23-.363-.346a6.3 6.3 0 0 1-1.02-1.268l-.059-.095a1 1 0 0 1-.102-.205c-.038-.147.061-.265.061-.265s.243-.266.356-.41c.11-.14.203-.276.263-.373c.118-.19.155-.385.093-.536q-.42-1.026-.868-2.041c-.059-.134-.234-.23-.393-.249q-.081-.01-.162-.016a3 3 0 0 0-.403.004z"></path></svg>
    )
}

export function RiTelegramFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2s10 4.477 10 10m-9.642-2.618q-1.458.607-5.831 2.513q-.711.282-.744.552c-.038.304.343.424.862.587l.218.07c.51.166 1.198.36 1.555.368q.486.01 1.084-.4q4.086-2.76 4.218-2.789c.063-.014.149-.032.207.02c.059.052.053.15.047.177c-.038.161-1.534 1.552-2.308 2.271q-.344.324-.683.653c-.474.457-.83.8.02 1.36c.861.568 1.73 1.134 2.57 1.733c.414.296.786.56 1.246.519c.267-.025.543-.276.683-1.026c.332-1.77.983-5.608 1.133-7.19a1.8 1.8 0 0 0-.017-.393a.42.42 0 0 0-.142-.27c-.12-.098-.305-.118-.387-.117c-.376.007-.953.207-3.73 1.362"></path></svg>
    )
}

export function RiDribbbleFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10c5.51 0 10-4.48 10-10S17.51 2 12 2m6.605 4.61a8.5 8.5 0 0 1 1.93 5.314c-.281-.054-3.101-.629-5.943-.271c-.065-.141-.12-.293-.184-.445a25 25 0 0 0-.564-1.236c3.145-1.28 4.577-3.124 4.761-3.362M12 3.475c2.17 0 4.154.814 5.662 2.148c-.152.216-1.443 1.941-4.48 3.08c-1.399-2.57-2.95-4.675-3.189-5A8.7 8.7 0 0 1 12 3.475m-3.633.803a54 54 0 0 1 3.167 4.935c-3.992 1.063-7.517 1.04-7.896 1.04a8.58 8.58 0 0 1 4.729-5.975M3.453 12.01v-.26c.37.01 4.512.065 8.775-1.215c.25.477.477.965.694 1.453c-.109.033-.228.065-.336.098c-4.404 1.42-6.747 5.303-6.942 5.629a8.52 8.52 0 0 1-2.19-5.705M12 20.547a8.48 8.48 0 0 1-5.239-1.8c.152-.315 1.888-3.656 6.703-5.337c.022-.01.033-.01.054-.022a35.3 35.3 0 0 1 1.823 6.475a8.4 8.4 0 0 1-3.341.684m4.761-1.465c-.086-.52-.542-3.015-1.66-6.084c2.68-.423 5.023.271 5.315.369a8.47 8.47 0 0 1-3.655 5.715"></path></svg>
    )
}

export function RiBehanceFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M7.443 5.35c.639 0 1.23.05 1.77.198c.541.099.984.297 1.377.544q.591.371.885 1.039c.197.445.296.99.296 1.583c0 .693-.148 1.286-.492 1.731c-.295.446-.787.841-1.377 1.138c.836.248 1.475.693 1.869 1.286s.639 1.336.639 2.177c0 .693-.148 1.286-.394 1.781c-.245.495-.639.94-1.082 1.237a5.1 5.1 0 0 1-1.573.692c-.59.149-1.18.248-1.77.248H1V5.35zm-.394 5.54c.541 0 .984-.148 1.328-.395s.492-.693.492-1.237c0-.297-.05-.594-.148-.791s-.246-.347-.442-.495a2.4 2.4 0 0 0-.64-.247c-.246-.05-.491-.05-.787-.05H4v3.216zm.148 5.838c.295 0 .59-.05.836-.099c.246-.05.492-.148.688-.297a1.8 1.8 0 0 0 .492-.544c.098-.247.197-.544.197-.89c0-.693-.197-1.188-.59-1.534c-.394-.297-.935-.445-1.574-.445H4v3.81zm9.492-.05q.59.594 1.77.594c.541 0 1.033-.148 1.426-.395q.591-.446.738-.891h2.41c-.394 1.187-.984 2.028-1.77 2.572c-.788.495-1.722.792-2.853.792a5.8 5.8 0 0 1-2.115-.396a3.9 3.9 0 0 1-1.574-1.088a3.9 3.9 0 0 1-.983-1.633c-.246-.643-.345-1.335-.345-2.127c0-.742.099-1.434.345-2.078a5.3 5.3 0 0 1 1.033-1.682c.442-.445.983-.84 1.573-1.088a5.5 5.5 0 0 1 2.066-.396c.836 0 1.574.149 2.213.495c.64.346 1.131.742 1.524 1.336c.394.544.69 1.187.886 1.88c.098.692.147 1.385.098 2.176H16c0 .792.295 1.534.689 1.93m3.098-5.194c-.344-.346-.885-.544-1.525-.544a2.34 2.34 0 0 0-1.082.247c-.295.149-.491.347-.688.545a1.3 1.3 0 0 0-.344.692c-.05.248-.099.445-.099.643h4.426c-.098-.742-.344-1.236-.688-1.583M15.459 6.29h5.508v1.336H15.46z"></path></svg>
    )
}

export function MingcuteGumroadFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><g fill="none" fillRule="evenodd"><path fill="currentColor" d="m12.594 23.258l-.012.002l-.071.035l-.02.004l-.014-.004l-.071-.036q-.016-.004-.024.006l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427q-.004-.016-.016-.018m.264-.113l-.014.002l-.184.093l-.01.01l-.003.011l.018.43l.005.012l.008.008l.201.092q.019.005.029-.008l.004-.014l-.034-.614q-.005-.019-.02-.022m-.715.002a.02.02 0 0 0-.027.006l-.006.014l-.034.614q.001.018.017.024l.015-.002l.201-.093l.01-.008l.003-.011l.018-.43l-.003-.012l-.01-.01z"></path><path fill="currentColor" d="M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12S6.477 2 12 2s10 4.477 10 10M9.876 9.303C9.37 9.807 9 10.6 9 11.75c0 1.001.276 1.833.71 2.39c.417.536 1.005.86 1.79.86c.48 0 1.099-.35 1.66-1.059a4.5 4.5 0 0 0 .576-.941H13a1 1 0 1 1 0-2h2a2 2 0 0 1 2 2v2.5a1 1 0 1 1-2 0v-.686a7 7 0 0 1-.272.37C14.002 16.1 12.87 17 11.5 17c-1.424 0-2.586-.627-3.367-1.63C7.369 14.389 7 13.096 7 11.75c0-1.6.526-2.932 1.467-3.866C9.403 6.955 10.668 6.5 12 6.5c.921 0 1.785.262 2.524.717c.415.255.944.654 1.347 1.16a1 1 0 1 1-1.565 1.246c-.21-.264-.533-.52-.83-.702A2.8 2.8 0 0 0 12 8.5c-.877 0-1.612.295-2.124.803"></path></g></svg>
    )
}

//=======================================================| UI/UX |=======================================================\\

export function SimpleIconsFigma({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M15.852 8.981h-4.588V0h4.588c2.476 0 4.49 2.014 4.49 4.49s-2.014 4.491-4.49 4.491M12.735 7.51h3.117c1.665 0 3.019-1.355 3.019-3.019s-1.355-3.019-3.019-3.019h-3.117zm0 1.471H8.148c-2.476 0-4.49-2.014-4.49-4.49S5.672 0 8.148 0h4.588v8.981zm-4.587-7.51c-1.665 0-3.019 1.355-3.019 3.019s1.354 3.02 3.019 3.02h3.117V1.471zm4.587 15.019H8.148c-2.476 0-4.49-2.014-4.49-4.49s2.014-4.49 4.49-4.49h4.588v8.98zM8.148 8.981c-1.665 0-3.019 1.355-3.019 3.019s1.355 3.019 3.019 3.019h3.117V8.981zM8.172 24c-2.489 0-4.515-2.014-4.515-4.49s2.014-4.49 4.49-4.49h4.588v4.441c0 2.503-2.047 4.539-4.563 4.539m-.024-7.51a3.023 3.023 0 0 0-3.019 3.019c0 1.665 1.365 3.019 3.044 3.019c1.705 0 3.093-1.376 3.093-3.068v-2.97zm7.704 0h-.098c-2.476 0-4.49-2.014-4.49-4.49s2.014-4.49 4.49-4.49h.098c2.476 0 4.49 2.014 4.49 4.49s-2.014 4.49-4.49 4.49m-.097-7.509c-1.665 0-3.019 1.355-3.019 3.019s1.355 3.019 3.019 3.019h.098c1.665 0 3.019-1.355 3.019-3.019s-1.355-3.019-3.019-3.019z"></path></svg>
    )
}


//=======================================================| DONATION |=======================================================\\
export function PhPatreonLogoFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 256 256" className={className} {...props}><path fill="currentColor" d="M232 93.17c0 41-29.69 52.47-53.55 61.67c-8.41 3.24-16.35 6.3-22.21 10.28c-11.39 7.72-18.59 21.78-25.55 35.38c-9.94 19.42-20.23 39.5-43.17 39.5c-12.91 0-24.61-11.64-33.85-33.66s-14.31-51-13.61-77.45c1.08-40.65 14.58-62.68 25.7-74c14.95-15.2 35.24-25.3 58.68-29.2c21.79-3.62 44.14-1.38 62.93 6.3C215.73 43.6 232 65.9 232 93.17"></path></svg>
    )
}

export function CibKoFi({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 32 32" className={className} {...props}><path fill="currentColor" d="M31.844 11.932c-1.032-5.448-6.48-6.125-6.48-6.125H.964C.156 5.807.057 6.87.057 6.87S-.052 16.637.03 22.637c.22 3.228 3.448 3.561 3.448 3.561s11.021-.031 15.953-.067c3.251-.568 3.579-3.423 3.541-4.98c5.808.323 9.896-3.776 8.871-9.219zm-14.751 4.683c-1.661 1.932-5.348 5.297-5.348 5.297s-.161.161-.417.031c-.099-.073-.14-.12-.14-.12c-.595-.588-4.491-4.063-5.381-5.271c-.943-1.287-1.385-3.599-.119-4.948c1.265-1.344 4.005-1.448 5.817.541c0 0 2.083-2.375 4.625-1.281c2.536 1.095 2.443 4.016.963 5.751m8.23.636c-1.24.156-2.244.036-2.244.036V9.714h2.359s2.631.735 2.631 3.516c0 2.552-1.313 3.557-2.745 4.021z"></path></svg>
    )
}

export function CustomBuyMeACoffe({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 883.5077 1279.0026" className={className} {...props}><g id="object-14" transform="matrix(1, 0, 0, 1, 5.684341886080802e-14, 5.684341886080802e-14)"><path d="M 791.109 297.518 L 790.231 297.002 L 788.201 296.383 C 789.018 297.072 790.04 297.472 791.109 297.518 Z" fill="currentColor" id="object-0"/><path d="M 803.896 388.891 L 802.916 389.166 L 803.896 388.891 Z" fill="currentColor" id="object-1"/><path d="M 791.484 297.377 C 791.359 297.361 791.237 297.332 791.118 297.29 C 791.111 297.371 791.111 297.453 791.118 297.534 C 791.252 297.516 791.379 297.462 791.484 297.377 Z" fill="currentColor" id="object-2"/><path d="M 791.113 297.529 L 791.244 297.529 L 791.244 297.447 L 791.113 297.529 Z" fill="currentColor" id="object-3"/><path d="M 803.111 388.726 L 804.591 387.883 L 805.142 387.573 L 805.641 387.04 C 804.702 387.444 803.846 388.016 803.111 388.726 Z" fill="currentColor" id="object-4"/><path d="M 793.669 299.515 L 792.223 298.138 L 791.243 297.605 C 791.77 298.535 792.641 299.221 793.669 299.515 Z" fill="currentColor" id="object-5"/><path d="M 430.019 1186.18 C 428.864 1186.68 427.852 1187.46 427.076 1188.45 L 427.988 1187.87 C 428.608 1187.3 429.485 1186.63 430.019 1186.18 Z" fill="currentColor" id="object-6"/><path d="M 641.187 1144.63 C 641.187 1143.33 640.551 1143.57 640.705 1148.21 C 640.705 1147.84 640.86 1147.46 640.929 1147.1 C 641.015 1146.27 641.084 1145.46 641.187 1144.63 Z" fill="currentColor" id="object-7"/><path d="M 619.284 1186.18 C 618.129 1186.68 617.118 1187.46 616.342 1188.45 L 617.254 1187.87 C 617.873 1187.3 618.751 1186.63 619.284 1186.18 Z" fill="currentColor" id="object-8"/><path d="M 281.304 1196.06 C 280.427 1195.3 279.354 1194.8 278.207 1194.61 C 279.136 1195.06 280.065 1195.51 280.684 1195.85 L 281.304 1196.06 Z" fill="currentColor" id="object-9"/><path d="M 247.841 1164.01 C 247.704 1162.66 247.288 1161.35 246.619 1160.16 C 247.093 1161.39 247.489 1162.66 247.806 1163.94 L 247.841 1164.01 Z" fill="currentColor" id="object-10"/><path d="M472.623 590.836C426.682 610.503 374.546 632.802 306.976 632.802C278.71 632.746 250.58 628.868 223.353 621.274L270.086 1101.08C271.74 1121.13 280.876 1139.83 295.679 1153.46C310.482 1167.09 329.87 1174.65 349.992 1174.65C349.992 1174.65 416.254 1178.09 438.365 1178.09C462.161 1178.09 533.516 1174.65 533.516 1174.65C553.636 1174.65 573.019 1167.08 587.819 1153.45C602.619 1139.82 611.752 1121.13 613.406 1101.08L663.459 570.876C641.091 563.237 618.516 558.161 593.068 558.161C549.054 558.144 513.591 573.303 472.623 590.836Z" fill="currentColor" id="object-11"/><path d="M 78.689 386.132 L 79.48 386.872 L 79.996 387.182 C 79.599 386.787 79.16 386.435 78.689 386.132 Z" fill="currentColor" id="object-12"/><path d="M879.567 341.849L872.53 306.352C866.215 274.503 851.882 244.409 819.19 232.898C808.711 229.215 796.821 227.633 788.786 220.01C780.751 212.388 778.376 200.55 776.518 189.572C773.076 169.423 769.842 149.257 766.314 129.143C763.269 111.85 760.86 92.4243 752.928 76.56C742.604 55.2584 721.182 42.8009 699.88 34.559C688.965 30.4844 677.826 27.0375 666.517 24.2352C613.297 10.1947 557.342 5.03277 502.591 2.09047C436.875 -1.53577 370.983 -0.443234 305.422 5.35968C256.625 9.79894 205.229 15.1674 158.858 32.0469C141.91 38.224 124.445 45.6399 111.558 58.7341C95.7448 74.8221 90.5829 99.7026 102.128 119.765C110.336 134.012 124.239 144.078 138.985 150.737C158.192 159.317 178.251 165.846 198.829 170.215C256.126 182.879 315.471 187.851 374.007 189.968C438.887 192.586 503.87 190.464 568.44 183.618C584.408 181.863 600.347 179.758 616.257 177.304C634.995 174.43 647.022 149.928 641.499 132.859C634.891 112.453 617.134 104.538 597.055 107.618C594.095 108.082 591.153 108.512 588.193 108.942L586.06 109.252C579.257 110.113 572.455 110.915 565.653 111.661C551.601 113.175 537.515 114.414 523.394 115.378C491.768 117.58 460.057 118.595 428.363 118.647C397.219 118.647 366.058 117.769 334.983 115.722C320.805 114.793 306.661 113.611 292.552 112.177C286.134 111.506 279.733 110.801 273.333 110.009L267.241 109.235L265.917 109.046L259.602 108.134C246.697 106.189 233.792 103.953 221.025 101.251C219.737 100.965 218.584 100.249 217.758 99.2193C216.932 98.1901 216.482 96.9099 216.482 95.5903C216.482 94.2706 216.932 92.9904 217.758 91.9612C218.584 90.9319 219.737 90.2152 221.025 89.9293H221.266C232.33 87.5721 243.479 85.5589 254.663 83.8038C258.392 83.2188 262.131 82.6453 265.882 82.0832H265.985C272.988 81.6186 280.026 80.3625 286.994 79.5366C347.624 73.2302 408.614 71.0801 469.538 73.1014C499.115 73.9618 528.676 75.6996 558.116 78.6935C564.448 79.3474 570.746 80.0357 577.043 80.8099C579.452 81.1025 581.878 81.4465 584.305 81.7391L589.191 82.4445C603.438 84.5667 617.61 87.1419 631.708 90.1703C652.597 94.7128 679.422 96.1925 688.713 119.077C691.673 126.338 693.015 134.408 694.649 142.03L696.731 151.752C696.786 151.926 696.826 152.105 696.852 152.285C701.773 175.227 706.7 198.169 711.632 221.111C711.994 222.806 712.002 224.557 711.657 226.255C711.312 227.954 710.621 229.562 709.626 230.982C708.632 232.401 707.355 233.6 705.877 234.504C704.398 235.408 702.75 235.997 701.033 236.236H700.895L697.884 236.649L694.908 237.044C685.478 238.272 676.038 239.419 666.586 240.486C647.968 242.608 629.322 244.443 610.648 245.992C573.539 249.077 536.356 251.102 499.098 252.066C480.114 252.57 461.135 252.806 442.162 252.771C366.643 252.712 291.189 248.322 216.173 239.625C208.051 238.662 199.93 237.629 191.808 236.58C198.106 237.389 187.231 235.96 185.029 235.651C179.867 234.928 174.705 234.177 169.543 233.397C152.216 230.798 134.993 227.598 117.7 224.793C96.7944 221.352 76.8005 223.073 57.8906 233.397C42.3685 241.891 29.8055 254.916 21.8776 270.735C13.7217 287.597 11.2956 305.956 7.64786 324.075C4.00009 342.193 -1.67805 361.688 0.472751 380.288C5.10128 420.431 33.165 453.054 73.5313 460.35C111.506 467.232 149.687 472.807 187.971 477.556C338.361 495.975 490.294 498.178 641.155 484.129C653.44 482.982 665.708 481.732 677.959 480.378C681.786 479.958 685.658 480.398 689.292 481.668C692.926 482.938 696.23 485.005 698.962 487.717C701.694 490.429 703.784 493.718 705.08 497.342C706.377 500.967 706.846 504.836 706.453 508.665L702.633 545.797C694.936 620.828 687.239 695.854 679.542 770.874C671.513 849.657 663.431 928.434 655.298 1007.2C653.004 1029.39 650.71 1051.57 648.416 1073.74C646.213 1095.58 645.904 1118.1 641.757 1139.68C635.218 1173.61 612.248 1194.45 578.73 1202.07C548.022 1209.06 516.652 1212.73 485.161 1213.01C450.249 1213.2 415.355 1211.65 380.443 1211.84C343.173 1212.05 297.525 1208.61 268.756 1180.87C243.479 1156.51 239.986 1118.36 236.545 1085.37C231.957 1041.7 227.409 998.039 222.9 954.381L197.607 711.615L181.244 554.538C180.968 551.94 180.693 549.376 180.435 546.76C178.473 528.023 165.207 509.681 144.301 510.627C126.407 511.418 106.069 526.629 108.168 546.76L120.298 663.214L145.385 904.104C152.532 972.528 159.661 1040.96 166.773 1109.41C168.15 1122.52 169.44 1135.67 170.885 1148.78C178.749 1220.43 233.465 1259.04 301.224 1269.91C340.799 1276.28 381.337 1277.59 421.497 1278.24C472.979 1279.07 524.977 1281.05 575.615 1271.72C650.653 1257.95 706.952 1207.85 714.987 1130.13C717.282 1107.69 719.576 1085.25 721.87 1062.8C729.498 988.559 737.115 914.313 744.72 840.061L769.601 597.451L781.009 486.263C781.577 480.749 783.905 475.565 787.649 471.478C791.392 467.391 796.352 464.617 801.794 463.567C823.25 459.386 843.761 452.245 859.023 435.916C883.318 409.918 888.153 376.021 879.567 341.849ZM72.4301 365.835C72.757 365.68 72.1548 368.484 71.8967 369.792C71.8451 367.813 71.9483 366.058 72.4301 365.835ZM74.5121 381.94C74.6842 381.819 75.2003 382.508 75.7337 383.334C74.925 382.576 74.4089 382.009 74.4949 381.94H74.5121ZM76.5597 384.641C77.2996 385.897 77.6953 386.689 76.5597 384.641V384.641ZM80.672 387.979H80.7752C80.7752 388.1 80.9645 388.22 81.0333 388.341C80.9192 388.208 80.7925 388.087 80.6548 387.979H80.672ZM800.796 382.989C793.088 390.319 781.473 393.726 769.996 395.43C641.292 414.529 510.713 424.199 380.597 419.932C287.476 416.749 195.336 406.407 103.144 393.382C94.1102 392.109 84.3197 390.457 78.1082 383.798C66.4078 371.237 72.1548 345.944 75.2003 330.768C77.9878 316.865 83.3218 298.334 99.8572 296.355C125.667 293.327 155.64 304.218 181.175 308.09C211.917 312.781 242.774 316.538 273.745 319.36C405.925 331.405 540.325 329.529 671.92 311.91C695.905 308.686 719.805 304.941 743.619 300.674C764.835 296.871 788.356 289.731 801.175 311.703C809.967 326.673 811.137 346.701 809.778 363.615C809.359 370.984 806.139 377.915 800.779 382.989H800.796Z" fill="currentColor" id="object-13"/></g></svg>
    )
}

export function CustomTrakteer({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 2000 2000" className={className} {...props}><path fill="currentColor" transform="matrix(1, 0, 0, 1, 341.00000000000006, 2.842170943040401e-14)" d="m0 0h1317l44 8 28 7 26 9 26 11 27 14 21 13 18 13 14 11 11 10 8 7 21 21 9 11 7 8 14 19 11 17 11 19 10 19 12 29 10 31 6 25 6 37 2 17v1284l-5 39-6 31-8 29-9 24-9 20-12 24-15 24-10 14-10 13-12 14-9 10-18 18-8 7-17 14-18 13-21 13-18 10-25 12-26 10-23 7-25 6-36 6-17 2h-1287l-42-6-29-6-24-7-25-9-18-8-16-8-15-8-19-12-14-10-13-10-14-12-12-11-17-17-9-11-11-13-13-18-14-22-12-22-11-24-10-27-7-25-5-22-6-36v-1317l8-42 6-24 10-30 11-26 13-25 14-23 8-11 12-16 11-13 12-13 7-8 8-7 14-13 17-13 15-11 19-12 18-10 27-13 29-11 25-7 33-7zm573 303-20 3-20 6-16 7-15 9-13 10-13 12-9 11-9 13-11 21-6 18-4 18-1 10v24l3 20 5 17 7 17 9 16 10 13 11 12 11 10 13 9 18 10 15 6 15 4 18 3h29v-7l-2-13v-34l4-20 6-18 8-16 7-12 9-12 5-5v-2h2l5-5 10-9 15-10 17-9 17-6 26-5 2-1-3-12-8-19-9-16-8-11-12-14-10-9-17-12-21-11-21-7-23-4zm172 143-20 4-19 7-11 6-13 9-14 12-9 10-10 15-8 16-5 14-4 18-1 9v18l3 19 6 20 8 16 3 4 4 1h205l10-1 6-9 7-17 5-18 2-21v-10l-2-17-5-19-7-16-8-14-13-16-7-7-10-8-14-9-16-8-20-6-11-2zm-343 231-13 4-10 6-9 8-7 11-5 12-1 5v16l2 9 7 14 9 10 9 7 12 5 9 2h517l13-4 11-6 10-9 7-11 4-10 2-10v-9l-4-16-5-10-9-10-9-7-11-5-9-2zm-17 175-1 48-20 8-18 10-14 11-16 16-12 17-8 15-7 19-4 18-1 12v479l3 22 5 17 8 18 10 16 11 13 11 11 15 11 16 9 20 8 18 4 7 1 29 1h435l49-1 18-3 21-7 16-8 11-7 10-8 4-3v-2l4-2 11-12 12-18 9-19 6-21 2-12 1-17v-460l-1-19-4-20-7-19-10-19-9-12-9-10-9-9-15-11-21-11-27-9-1-44-1-1z"></path><path fill="currentColor" transform="matrix(1, 0, 0, 1, 893.0000000000002, 1082.0000000000002)" d="m0 0h17l15 2 15 4 13 5 21 11 16 12 12 11h4l12-11 17-12 16-9 15-6 15-4 14-2h20l19 3 15 5 16 8 12 8 13 12 9 10 9 14 8 17 4 13 3 18v17l-2 15-4 16-9 21-9 15-9 12-9 10-7 8-168 168-4-1-178-178-11-14-10-15-8-16-5-13-4-16-2-18 1-16 3-16 6-18 8-15 12-16 12-12 16-11 16-8 16-5z"></path></svg>
    )
}

export function CustomSaweria({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 2048 2048" className={className} {...props}><path fill="currentColor" d="M 328.268 2.784 L 356.246 2.784 L 389.82 10.246 L 412.202 19.57 L 430.854 34.493 L 443.911 49.416 L 455.104 68.067 L 468.158 103.506 L 477.486 146.407 L 484.948 207.96 L 494.274 304.951 L 503.6 364.638 L 514.791 405.675 L 527.847 435.517 L 540.905 457.901 L 555.825 476.555 L 574.479 495.206 L 600.592 511.993 L 628.57 523.184 L 649.089 526.916 L 682.661 519.454 L 740.483 502.667 L 807.633 487.746 L 867.32 478.419 L 925.143 472.822 L 982.967 470.958 L 1063.17 470.958 L 1130.318 474.689 L 1193.736 482.149 L 1259.02 493.341 L 1326.167 508.263 L 1385.855 525.05 L 1406.373 525.05 L 1425.025 521.317 L 1454.868 508.263 L 1475.385 493.341 L 1492.174 478.419 L 1512.691 450.439 L 1527.613 420.597 L 1538.805 390.751 L 1548.132 347.852 L 1555.592 290.03 L 1566.783 174.385 L 1574.243 129.621 L 1581.704 97.912 L 1592.897 69.933 L 1604.089 49.416 L 1624.605 27.032 L 1645.123 15.841 L 1663.775 8.379 L 1691.755 2.784 L 1716.003 2.784 L 1738.385 8.379 L 1760.767 19.57 L 1779.42 36.357 L 1792.476 53.145 L 1805.533 79.259 L 1814.858 109.102 L 1820.454 133.35 L 1826.05 183.711 L 1826.05 234.072 L 1818.592 288.166 L 1809.263 325.47 L 1794.342 364.638 L 1775.69 400.079 L 1762.633 418.732 L 1740.25 448.575 L 1729.059 461.631 L 1725.327 461.631 L 1721.597 469.093 L 1699.217 491.475 L 1684.292 504.532 L 1660.045 523.184 L 1635.797 538.107 L 1605.952 553.027 L 1576.108 564.22 L 1546.266 569.814 L 1510.825 575.412 L 1503.365 582.873 L 1501.5 586.602 L 1501.5 599.659 L 1512.691 618.312 L 1536.94 648.155 L 1551.861 668.672 L 1591.03 720.899 L 1617.145 756.339 L 1645.123 793.642 L 1658.18 812.294 L 1676.832 838.409 L 1697.35 866.388 L 1727.193 909.288 L 1747.712 939.131 L 1811.13 1034.259 L 1831.647 1065.968 L 1854.03 1101.407 L 1867.087 1121.925 L 1878.278 1142.442 L 1896.93 1174.151 L 1919.313 1213.32 L 1934.233 1243.166 L 1956.617 1291.662 L 1971.538 1332.695 L 1979 1364.405 L 1979 1394.251 L 1975.27 1401.709 L 1964.077 1407.306 L 1945.425 1407.306 L 1913.717 1399.845 L 1885.738 1390.517 L 1874.547 1390.517 L 1861.49 1401.709 L 1859.625 1414.766 L 1900.658 1526.681 L 1919.313 1584.501 L 1930.505 1629.267 L 1932.368 1638.595 L 1932.368 1677.764 L 1923.042 1700.147 L 1911.851 1715.067 L 1895.065 1731.857 L 1874.547 1748.642 L 1848.434 1769.16 L 1816.725 1791.544 L 1788.746 1808.331 L 1753.307 1826.982 L 1725.327 1838.175 L 1704.811 1843.77 L 1695.483 1843.77 L 1693.618 1841.905 L 1691.755 1795.274 L 1684.292 1752.376 L 1673.101 1715.067 L 1660.045 1685.225 L 1639.528 1651.651 L 1622.74 1629.267 L 1604.089 1610.616 L 1574.243 1591.964 L 1553.726 1582.638 L 1536.94 1577.042 L 1525.748 1575.176 L 1486.577 1575.176 L 1451.138 1584.501 L 1426.891 1597.559 L 1413.834 1606.885 L 1398.911 1625.539 L 1395.182 1633.001 L 1387.721 1631.134 L 1370.934 1616.211 L 1344.82 1603.155 L 1326.167 1597.559 L 1286.998 1597.559 L 1260.885 1610.616 L 1249.693 1619.942 L 1236.635 1638.595 L 1225.445 1660.977 L 1217.983 1683.359 L 1208.658 1685.225 L 1203.063 1683.359 L 1176.948 1683.359 L 1154.566 1688.956 L 1124.722 1703.876 L 1102.342 1724.395 L 1083.688 1748.642 L 1072.496 1772.891 L 1066.9 1795.274 L 1065.033 1806.466 L 1065.033 1841.905 L 1072.496 1875.479 L 1083.688 1905.322 L 1085.552 1914.649 L 1070.632 1916.514 L 975.504 1918.38 L 971.774 1916.514 L 973.638 1905.322 L 981.1 1886.669 L 984.83 1866.152 L 984.83 1821.388 L 975.504 1789.679 L 960.583 1761.7 L 943.795 1741.183 L 927.008 1726.26 L 899.03 1711.339 L 874.78 1703.876 L 848.667 1702.013 L 841.208 1705.743 L 831.882 1703.876 L 818.823 1670.304 L 802.036 1644.189 L 785.25 1629.267 L 764.732 1619.942 L 759.135 1618.076 L 721.833 1618.076 L 697.584 1625.539 L 673.337 1640.459 L 660.28 1653.516 L 652.818 1651.651 L 641.628 1634.863 L 624.842 1619.942 L 596.861 1605.02 L 570.748 1597.559 L 555.825 1595.692 L 535.309 1595.692 L 505.467 1599.425 L 479.351 1608.751 L 453.239 1625.539 L 430.854 1646.056 L 414.068 1666.572 L 393.551 1698.282 L 378.629 1729.991 L 367.438 1763.564 L 359.976 1791.544 L 356.246 1841.905 L 354.382 1843.77 L 335.729 1841.905 L 304.021 1830.714 L 276.041 1817.657 L 242.467 1799.005 L 207.028 1774.756 L 188.375 1759.834 L 167.857 1743.047 L 143.608 1722.53 L 128.688 1705.743 L 117.496 1681.496 L 115.632 1675.899 L 115.632 1646.056 L 124.958 1605.02 L 141.743 1547.197 L 154.801 1509.892 L 188.375 1420.361 L 188.375 1403.575 L 177.184 1392.384 L 169.722 1390.517 L 139.879 1397.979 L 121.226 1403.575 L 106.305 1407.306 L 83.922 1407.306 L 72.729 1401.709 L 69 1392.384 L 69 1375.597 L 74.595 1343.888 L 87.653 1304.718 L 108.17 1256.222 L 126.823 1220.782 L 147.342 1181.611 L 173.452 1136.847 L 199.566 1093.945 L 221.948 1058.506 L 235.007 1037.989 L 283.503 965.246 L 309.615 927.939 L 339.459 885.041 L 361.842 853.331 L 386.092 819.756 L 401.01 799.239 L 425.26 765.666 L 443.911 741.417 L 462.565 715.305 L 488.677 681.729 L 505.467 659.347 L 524.117 635.099 L 542.771 608.984 L 548.365 597.794 L 546.5 584.736 L 540.905 577.276 L 505.467 569.814 L 473.757 564.22 L 442.047 553.027 L 399.146 530.645 L 369.302 508.263 L 348.783 489.609 L 333.864 476.555 L 313.345 454.169 L 292.827 428.058 L 270.445 394.482 L 249.927 355.314 L 235.007 310.547 L 227.545 275.107 L 221.948 224.748 L 221.948 191.172 L 227.545 142.677 L 235.007 105.373 L 244.333 77.392 L 261.118 45.684 L 277.905 27.032 L 296.559 13.975 L 320.807 4.649 L 328.268 2.784 Z M 598.726 704.111 L 552.095 719.034 L 514.791 739.552 L 488.677 758.204 L 470.025 776.857 L 453.239 795.509 L 436.45 816.026 L 423.396 836.544 L 406.607 868.251 L 391.686 907.422 L 380.493 957.784 L 378.629 983.898 L 378.629 1026.797 L 380.493 1043.585 L 387.955 1080.888 L 399.146 1114.464 L 412.202 1140.576 L 427.125 1164.825 L 443.911 1187.208 L 460.698 1203.996 L 481.217 1220.782 L 501.733 1233.839 L 531.577 1246.895 L 561.422 1256.222 L 600.592 1259.951 L 643.492 1256.222 L 665.875 1250.626 L 693.854 1241.3 L 721.833 1226.376 L 749.811 1207.725 L 770.327 1189.072 L 796.441 1161.095 L 811.364 1142.442 L 833.746 1105.138 L 848.667 1069.697 L 859.858 1030.527 L 867.32 987.626 L 867.32 931.669 L 857.993 881.309 L 844.938 842.138 L 828.15 810.431 L 805.768 778.722 L 788.979 761.934 L 770.327 745.148 L 742.35 726.496 L 703.18 709.708 L 662.146 700.381 L 611.783 700.381 L 598.726 704.111 Z M 1344.82 696.651 L 1311.246 707.843 L 1296.323 715.305 L 1262.75 737.687 L 1238.503 761.934 L 1221.717 782.451 L 1197.467 823.486 L 1180.68 873.849 L 1173.217 916.751 L 1173.217 976.437 L 1175.084 987.626 L 1184.408 1032.392 L 1197.467 1071.564 L 1217.983 1114.464 L 1231.041 1133.117 L 1249.693 1157.363 L 1275.807 1183.477 L 1301.92 1203.996 L 1322.438 1217.051 L 1354.147 1231.974 L 1376.53 1239.434 L 1411.967 1246.895 L 1464.195 1246.895 L 1469.791 1245.03 L 1488.443 1241.3 L 1516.422 1231.974 L 1542.533 1218.917 L 1570.513 1200.263 L 1594.76 1176.016 L 1611.549 1155.501 L 1628.337 1127.52 L 1643.258 1093.945 L 1654.448 1056.641 L 1660.045 1021.201 L 1660.045 963.379 L 1652.584 918.614 L 1641.392 881.309 L 1626.471 844.004 L 1613.413 821.623 L 1596.628 797.376 L 1579.842 776.857 L 1566.783 763.8 L 1540.67 741.417 L 1520.153 726.496 L 1490.309 711.572 L 1473.522 704.111 L 1436.217 692.919 L 1402.642 689.189 L 1382.125 689.189 L 1344.82 696.651 Z M 529.714 1638.595 L 550.229 1638.595 L 580.073 1646.056 L 596.861 1655.381 L 609.917 1666.572 L 619.243 1685.225 L 628.57 1726.26 L 637.896 1731.857 L 649.089 1733.722 L 658.413 1729.991 L 673.337 1709.472 L 690.123 1687.091 L 703.18 1674.034 L 719.967 1664.708 L 729.292 1660.977 L 747.945 1660.977 L 762.867 1668.439 L 775.924 1683.359 L 785.25 1705.743 L 790.845 1728.126 L 794.575 1757.97 L 800.172 1767.294 L 807.633 1771.026 L 824.42 1769.16 L 839.342 1756.104 L 848.667 1748.642 L 872.916 1748.642 L 899.03 1761.7 L 917.682 1778.486 L 928.873 1795.274 L 940.065 1821.388 L 941.93 1834.442 L 941.93 1851.232 L 936.334 1881.075 L 921.411 1910.919 L 908.354 1931.437 L 893.434 1950.089 L 878.51 1965.01 L 859.858 1979.933 L 830.016 1998.584 L 800.172 2013.506 L 770.327 2024.697 L 731.158 2035.889 L 691.989 2043.35 L 673.337 2045.216 L 606.188 2045.216 L 576.342 2039.621 L 542.771 2028.429 L 512.926 2013.506 L 490.542 2000.45 L 464.43 1979.933 L 440.182 1955.684 L 421.53 1927.706 L 410.339 1901.593 L 404.742 1884.806 L 401.01 1866.152 L 401.01 1817.657 L 410.339 1774.756 L 419.663 1746.777 L 434.587 1716.934 L 453.239 1688.956 L 470.025 1670.304 L 488.677 1655.381 L 514.791 1642.325 L 529.714 1638.595 Z M 1488.443 1619.942 L 1523.883 1619.942 L 1542.533 1625.539 L 1564.917 1638.595 L 1583.57 1653.516 L 1600.357 1674.034 L 1617.145 1700.147 L 1630.2 1726.26 L 1641.392 1759.834 L 1648.854 1797.139 L 1648.854 1841.905 L 1645.123 1862.422 L 1637.661 1884.806 L 1622.74 1914.649 L 1604.089 1940.763 L 1581.704 1963.145 L 1549.996 1985.527 L 1510.825 2006.044 L 1467.925 2020.968 L 1434.351 2026.564 L 1383.99 2026.564 L 1335.493 2019.102 L 1298.19 2009.776 L 1259.02 1996.72 L 1221.717 1979.933 L 1186.275 1957.55 L 1160.161 1935.167 L 1143.375 1914.649 L 1122.857 1882.939 L 1113.53 1860.558 L 1107.936 1840.041 L 1107.936 1812.062 L 1113.53 1789.679 L 1126.589 1765.431 L 1143.375 1746.777 L 1167.623 1731.857 L 1182.545 1726.26 L 1193.736 1726.26 L 1210.524 1737.451 L 1231.041 1752.376 L 1245.964 1750.509 L 1253.424 1741.183 L 1266.479 1681.496 L 1273.941 1664.708 L 1283.267 1649.785 L 1290.729 1644.189 L 1296.323 1642.325 L 1322.438 1642.325 L 1341.092 1649.785 L 1361.607 1668.439 L 1361.607 1672.169 L 1365.339 1672.169 L 1382.125 1698.282 L 1389.587 1707.607 L 1397.047 1711.339 L 1411.967 1711.339 L 1421.295 1705.743 L 1425.025 1696.417 L 1430.621 1664.708 L 1439.948 1646.056 L 1456.733 1631.134 L 1479.117 1621.808 L 1488.443 1619.942 Z M 945.658 1088.35 L 904.625 1099.542 L 885.972 1107.001 L 859.858 1121.925 L 843.073 1136.847 L 833.746 1155.501 L 831.882 1172.287 L 839.342 1194.669 L 852.399 1209.591 L 874.78 1226.376 L 906.49 1241.3 L 923.278 1243.166 L 925.143 1254.357 L 930.739 1269.277 L 947.525 1295.391 L 964.313 1306.583 L 986.695 1315.909 L 1007.214 1319.639 L 1005.347 1328.966 L 990.426 1343.888 L 964.313 1364.405 L 940.065 1381.192 L 900.896 1401.709 L 872.916 1409.169 L 859.858 1409.169 L 843.073 1390.517 L 831.882 1370.001 L 822.555 1347.618 L 820.69 1336.426 L 835.611 1319.639 L 846.802 1302.852 L 844.938 1289.794 L 830.016 1276.738 L 816.959 1276.738 L 811.364 1278.604 L 802.036 1286.064 L 779.655 1306.583 L 759.135 1317.774 L 729.292 1323.371 L 716.236 1334.562 L 716.236 1353.214 L 721.833 1362.541 L 734.888 1368.135 L 755.405 1368.135 L 766.597 1364.405 L 775.924 1362.541 L 779.655 1371.866 L 790.845 1394.251 L 807.633 1422.227 L 815.092 1431.554 L 833.746 1448.341 L 856.129 1457.667 L 874.78 1457.667 L 885.972 1455.801 L 893.434 1452.07 L 897.163 1463.263 L 915.816 1511.759 L 930.739 1541.602 L 945.658 1565.85 L 958.717 1584.501 L 981.1 1605.02 L 1001.617 1616.211 L 1018.405 1621.808 L 1050.114 1621.808 L 1059.44 1619.942 L 1089.283 1605.02 L 1104.205 1591.964 L 1113.53 1582.638 L 1124.722 1567.716 L 1143.375 1537.873 L 1162.028 1498.701 L 1175.084 1459.532 L 1227.311 1459.532 L 1242.232 1455.801 L 1259.02 1444.609 L 1275.807 1424.093 L 1286.998 1401.709 L 1296.323 1379.326 L 1301.92 1353.214 L 1314.976 1355.079 L 1331.763 1355.079 L 1341.092 1353.214 L 1346.686 1349.482 L 1354.147 1338.292 L 1354.147 1323.371 L 1344.82 1312.179 L 1316.842 1308.447 L 1292.592 1300.986 L 1240.367 1276.738 L 1225.445 1276.738 L 1217.983 1282.334 L 1212.388 1291.662 L 1212.388 1304.718 L 1216.118 1314.044 L 1225.445 1321.504 L 1255.288 1338.292 L 1253.424 1351.349 L 1245.964 1375.597 L 1231.041 1405.439 L 1219.85 1412.901 L 1197.467 1412.901 L 1169.489 1405.439 L 1132.184 1388.652 L 1104.205 1371.866 L 1079.958 1349.482 L 1065.033 1327.1 L 1063.17 1317.774 L 1085.552 1308.447 L 1104.205 1295.391 L 1119.128 1276.738 L 1126.589 1256.222 L 1132.184 1245.03 L 1145.24 1241.3 L 1156.432 1235.704 L 1173.217 1228.243 L 1199.333 1213.32 L 1214.254 1196.534 L 1223.579 1177.881 L 1223.579 1162.959 L 1221.717 1155.501 L 1210.524 1136.847 L 1193.736 1121.925 L 1173.217 1110.732 L 1143.375 1097.677 L 1115.397 1090.216 L 1059.44 1080.888 L 997.885 1080.888 L 945.658 1088.35 Z M 1313.111 774.992 L 1333.629 776.857 L 1350.416 782.451 L 1367.202 793.642 L 1382.125 808.564 L 1393.316 825.352 L 1404.508 847.734 L 1415.698 881.309 L 1423.158 924.21 L 1423.158 978.302 L 1413.834 1023.067 L 1402.642 1052.912 L 1391.45 1075.294 L 1376.53 1093.945 L 1359.742 1108.868 L 1342.954 1118.192 L 1335.493 1120.059 L 1303.783 1120.059 L 1281.403 1110.732 L 1264.615 1097.677 L 1245.964 1073.43 L 1231.041 1043.585 L 1219.85 1004.416 L 1214.254 968.975 L 1214.254 937.266 L 1221.717 886.905 L 1232.905 849.6 L 1249.693 817.891 L 1266.479 797.376 L 1285.133 784.317 L 1296.323 778.722 L 1313.111 774.992 Z M 710.641 776.857 L 733.024 776.857 L 744.217 782.451 L 762.867 799.239 L 777.788 816.026 L 792.712 838.409 L 807.633 871.982 L 815.092 898.097 L 820.69 926.075 L 820.69 991.357 L 811.364 1034.259 L 794.575 1079.024 L 783.385 1093.945 L 770.327 1107.001 L 744.217 1120.059 L 714.371 1120.059 L 697.584 1114.464 L 678.932 1103.273 L 664.01 1088.35 L 647.222 1062.236 L 636.03 1036.126 L 628.57 1011.876 L 622.975 982.032 L 622.975 922.345 L 626.705 898.097 L 636.03 862.657 L 645.357 838.409 L 658.413 816.026 L 678.932 793.642 L 699.448 780.586 L 710.641 776.857 Z M 1031.462 1368.135 L 1038.922 1370.001 L 1051.979 1384.922 L 1070.632 1403.575 L 1104.205 1425.958 L 1128.452 1439.014 L 1130.318 1446.475 L 1117.26 1485.645 L 1094.879 1530.412 L 1076.226 1554.659 L 1059.44 1569.581 L 1044.518 1575.176 L 1024 1575.176 L 1010.943 1569.581 L 992.291 1552.794 L 979.233 1534.141 L 962.448 1502.433 L 949.391 1470.724 L 940.065 1439.014 L 940.065 1435.284 L 966.177 1420.361 L 996.022 1399.845 L 1020.271 1379.326 L 1031.462 1368.135 Z M 1572.38 1425.958 L 1559.323 1440.88 L 1559.323 1466.993 L 1561.188 1472.589 L 1576.108 1506.164 L 1594.76 1541.602 L 1628.337 1614.347 L 1637.661 1623.672 L 1646.988 1629.267 L 1674.967 1629.267 L 1688.024 1621.808 L 1699.217 1605.02 L 1699.217 1588.232 L 1697.35 1580.772 L 1688.024 1560.255 L 1630.2 1444.609 L 1619.01 1429.689 L 1604.089 1420.361 L 1583.57 1420.361 L 1572.38 1425.958 Z M 1695.483 1397.979 L 1680.563 1411.037 L 1674.967 1422.227 L 1674.967 1440.88 L 1678.698 1452.07 L 1706.675 1508.027 L 1742.115 1580.772 L 1753.307 1595.692 L 1764.498 1603.155 L 1781.283 1606.885 L 1798.073 1599.425 L 1807.399 1590.099 L 1814.858 1577.042 L 1814.858 1560.255 L 1812.993 1554.659 L 1785.016 1496.836 L 1770.092 1466.993 L 1753.307 1431.554 L 1738.385 1407.306 L 1723.464 1397.979 L 1706.675 1394.251 L 1695.483 1397.979 Z M 1024 1198.399 L 1053.842 1202.129 L 1079.958 1211.456 L 1096.743 1224.513 L 1106.07 1237.567 L 1107.936 1243.166 L 1107.936 1261.817 L 1100.475 1276.738 L 1085.552 1289.794 L 1065.033 1299.123 L 1037.057 1304.718 L 1010.943 1304.718 L 984.83 1297.256 L 962.448 1284.2 L 953.121 1273.009 L 945.658 1258.086 L 945.658 1243.166 L 954.986 1228.243 L 971.774 1213.32 L 992.291 1203.996 L 1024 1198.399 Z M 305.885 1433.419 L 289.097 1448.341 L 277.905 1468.857 L 262.983 1498.701 L 238.736 1550.929 L 236.871 1571.445 L 240.601 1584.501 L 246.198 1591.964 L 261.118 1601.291 L 285.367 1601.291 L 289.097 1599.425 L 298.424 1591.964 L 311.479 1575.176 L 326.403 1543.468 L 346.92 1502.433 L 356.246 1480.05 L 358.111 1466.993 L 354.382 1453.937 L 341.323 1439.014 L 326.403 1431.554 L 309.615 1431.554 L 305.885 1433.419 Z M 412.202 1453.937 L 395.416 1468.857 L 386.092 1485.645 L 371.167 1515.488 L 354.382 1547.197 L 343.19 1577.042 L 343.19 1590.099 L 345.055 1595.692 L 354.382 1610.616 L 373.033 1621.808 L 386.092 1621.808 L 402.878 1614.347 L 414.068 1601.291 L 430.854 1569.581 L 449.508 1530.412 L 462.565 1500.567 L 464.43 1481.916 L 456.967 1468.857 L 442.047 1455.801 L 421.53 1452.07 L 412.202 1453.937 Z M 1225.445 569.814 L 1216.118 581.006 L 1216.118 597.794 L 1223.579 607.121 L 1234.772 612.716 L 1272.075 616.445 L 1294.459 623.907 L 1322.438 636.964 L 1352.28 655.617 L 1387.721 681.729 L 1406.373 683.595 L 1415.698 678.001 L 1423.158 666.808 L 1423.158 653.751 L 1419.43 648.155 L 1398.911 629.501 L 1354.147 599.659 L 1324.302 584.736 L 1300.055 575.412 L 1264.615 566.085 L 1232.905 566.085 L 1225.445 569.814 Z M 725.563 582.873 L 688.258 594.064 L 667.74 603.388 L 637.896 620.177 L 608.052 640.692 L 589.4 655.617 L 581.94 666.808 L 581.94 681.729 L 583.805 687.325 L 591.266 694.787 L 600.592 698.516 L 619.243 692.919 L 634.166 681.729 L 665.875 659.347 L 697.584 642.559 L 725.563 631.368 L 759.135 627.638 L 766.597 625.773 L 781.521 618.312 L 787.115 607.121 L 785.25 595.93 L 775.924 584.736 L 761.003 581.006 L 733.024 581.006 L 725.563 582.873 Z M 1010.943 689.189 L 999.753 702.248 L 999.753 821.623 L 1001.617 830.947 L 1007.214 838.409 L 1018.405 845.871 L 1029.595 845.871 L 1044.518 832.814 L 1048.248 817.891 L 1048.248 707.843 L 1044.518 698.516 L 1031.462 687.325 L 1016.538 687.325 L 1010.943 689.189 Z M 1074.361 702.248 L 1068.766 711.572 L 1068.766 728.359 L 1074.361 760.067 L 1081.823 784.317 L 1094.879 817.891 L 1104.205 832.814 L 1113.53 838.409 L 1126.589 840.274 L 1135.913 836.544 L 1143.375 825.352 L 1145.24 814.162 L 1137.78 795.509 L 1126.589 765.666 L 1119.128 733.956 L 1115.397 705.977 L 1113.53 702.248 L 1104.205 692.919 L 1085.552 692.919 L 1074.361 702.248 Z M 936.334 698.516 L 930.739 707.843 L 928.873 733.956 L 921.411 763.8 L 904.625 808.564 L 904.625 827.218 L 917.682 838.409 L 938.198 838.409 L 945.658 830.947 L 960.583 799.239 L 971.774 765.666 L 977.368 735.82 L 977.368 709.708 L 971.774 700.381 L 962.448 692.919 L 943.795 692.919 L 936.334 698.516 Z" transform="matrix(1, 0, 0, 1, 1.1368683772161603e-13, 5.684341886080802e-14)"></path></svg>
    )
}

export function CustomSociaBuzz({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 900 896" className={className} {...props}><path fill="currentColor" d="M 564.369 215.816 L 589.655 215.816 L 613.793 219.264 L 637.932 226.161 L 655.173 233.057 L 681.609 246.851 L 701.15 260.644 L 716.093 273.288 L 727.587 283.633 L 740.23 296.276 L 748.275 305.472 L 759.771 320.414 L 771.265 337.655 L 782.759 359.495 L 793.103 388.23 L 797.701 410.07 L 800 428.459 L 800 446.851 L 795.403 475.587 L 789.656 497.426 L 782.759 515.816 L 772.415 537.655 L 757.471 561.793 L 745.978 576.736 L 737.931 585.931 L 727.587 597.425 L 567.817 757.196 L 558.621 765.241 L 449.424 874.438 L 442.528 880.185 L 439.08 880.185 L 424.139 856.045 L 414.942 835.357 L 411.495 823.863 L 409.195 813.517 L 409.195 783.632 L 413.794 762.943 L 421.839 744.553 L 432.183 727.31 L 441.38 715.816 L 451.725 704.322 L 648.277 507.771 L 658.621 492.828 L 667.816 473.289 L 672.415 457.196 L 673.563 450.299 L 673.563 430.759 L 670.115 414.666 L 664.368 400.874 L 655.173 384.782 L 641.38 368.689 L 629.886 358.344 L 612.645 346.851 L 597.702 341.103 L 581.61 337.655 L 563.22 337.655 L 544.827 341.103 L 522.987 350.3 L 506.898 360.645 L 495.402 369.839 L 485.058 380.184 L 482.758 380.184 L 482.758 382.483 L 480.46 382.483 L 480.46 384.782 L 478.161 384.782 L 475.862 389.38 L 473.564 389.38 L 471.264 393.977 L 443.679 421.562 L 434.484 429.61 L 368.965 495.125 L 354.025 504.322 L 337.932 510.069 L 321.84 510.069 L 305.747 504.322 L 293.104 495.125 L 283.908 484.781 L 278.161 475.587 L 273.563 460.643 L 273.563 445.702 L 278.161 428.459 L 287.357 413.518 L 300 399.726 L 320.691 379.035 L 329.885 370.989 L 422.989 277.885 L 439.08 265.242 L 450.576 257.195 L 465.517 248.001 L 483.91 238.805 L 502.299 230.76 L 526.437 222.712 L 555.172 216.966 L 564.369 215.816 Z" transform="matrix(1, 0, 0, 1, 0, 5.684341886080802e-14)"></path><path fill="currentColor" d="M 456.323 15.816 L 459.77 15.816 L 472.414 36.505 L 481.609 54.897 L 487.357 72.138 L 489.655 85.931 L 489.655 113.517 L 485.058 131.908 L 479.311 146.851 L 472.414 159.494 L 463.219 173.286 L 454.023 184.782 L 440.231 199.724 L 331.035 308.92 L 324.138 314.667 L 316.093 323.862 L 302.298 336.507 L 250.574 388.23 L 240.229 403.173 L 231.035 422.714 L 226.437 439.955 L 225.288 445.702 L 225.288 467.54 L 229.885 485.932 L 236.782 502.024 L 248.277 518.115 L 260.92 531.909 L 277.012 544.551 L 295.402 553.748 L 305.747 557.196 L 318.391 559.495 L 332.185 559.495 L 350.576 556.046 L 366.667 550.299 L 386.207 539.953 L 400.001 529.609 L 413.794 516.965 L 528.736 402.023 L 540.23 393.977 L 550.574 389.38 L 560.92 387.08 L 575.862 387.08 L 590.805 391.678 L 602.299 398.574 L 612.645 408.919 L 621.839 425.011 L 625.287 435.356 L 625.287 452.598 L 620.69 467.54 L 613.793 480.185 L 601.149 493.977 L 478.161 616.966 L 462.07 629.609 L 447.127 639.954 L 432.183 649.15 L 412.644 659.494 L 385.058 669.838 L 364.369 675.587 L 337.932 680.183 L 308.047 680.183 L 290.806 677.886 L 266.667 672.139 L 247.126 665.243 L 227.586 656.046 L 205.747 642.253 L 189.656 629.609 L 173.563 615.817 L 159.77 602.024 L 149.425 589.379 L 136.782 573.287 L 125.288 554.896 L 116.093 537.655 L 108.046 516.965 L 101.15 488.229 L 100 477.884 L 100 444.552 L 103.448 420.414 L 110.344 396.276 L 117.241 377.886 L 128.737 354.896 L 142.529 333.059 L 152.874 319.264 L 166.666 304.323 L 172.415 297.426 L 180.46 290.529 L 454.023 16.966 L 456.323 15.816 Z" transform="matrix(1, 0, 0, 1, 0, 5.684341886080802e-14)"></path></svg>
    )
}

export function CustomDana({ className, props }: { className?: string; props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 48 48" className={className} {...props}><path d="M 45.5 24 C 45.5 35.874 35.874 45.5 24 45.5 C 12.126 45.5 2.5 35.874 2.5 24 C 2.5 12.126 12.126 2.5 24 2.5 C 35.874 2.5 45.5 12.126 45.5 24 Z M 35.5 17.812 C 27.833 12.367 20.167 23.257 12.5 17.812 L 12.5 30.188 C 20.167 35.633 27.833 24.743 35.5 30.188 Z" fill="currentColor" id="object-0" transform="matrix(1, 0, 0, 1, 0, 0)"/></svg>
    );
}

export function CustomGoPay({ className, props }: { className?: string; props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 283.5 274.3" className={className} {...props}><path d="M 283.5 137.15 C 283.5 212.896 220.036 274.3 141.75 274.3 C 63.464 274.3 0 212.896 0 137.15 C 0 61.404 63.464 0 141.75 0 C 220.036 0 283.5 61.404 283.5 137.15 Z M 224.465 133.116 C 223.298 116.013 207.956 102.298 190.112 103.427 L 100.392 103.427 C 96.89 103.427 94.556 101.168 94.556 97.78 C 94.556 94.391 96.89 92.133 100.392 92.133 L 191.279 92.133 C 190.612 80.676 181.774 68.736 170.6 66.961 C 144.085 62.444 116.902 62.444 90.887 66.961 C 76.045 69.22 64.871 83.581 62.537 97.296 C 58.368 124.242 58.368 151.51 62.537 178.456 C 65.539 193.946 78.546 206.532 95.056 208.791 C 128.075 212.825 161.261 212.825 193.781 208.791 C 208.623 207.016 217.961 193.946 220.963 180.231 C 223.798 164.096 224.966 148.606 224.465 133.116 Z M 194.948 151.994 L 194.948 157.158 C 194.948 160.546 192.613 162.805 189.111 162.805 C 185.609 162.805 183.274 160.546 183.274 157.158 L 183.274 151.994 C 181.44 150.22 180.273 147.961 180.273 145.702 C 180.273 141.184 184.442 137.15 189.111 137.15 C 193.781 137.15 197.95 141.184 197.95 145.702 C 197.783 147.961 196.616 150.381 194.948 151.994 Z" fill="currentColor" id="object-0" transform="matrix(0.9999999999999999, 0, 0, 0.9999999999999999, 0, 0)" /></svg>
    );
}

//=======================================================| GAME |=======================================================\\
export function RiSteamFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12.005 2c-5.25 0-9.556 4.05-9.964 9.198l5.36 2.214a2.8 2.8 0 0 1 1.593-.491q.08.001.157.005l2.384-3.452v-.049c0-2.08 1.69-3.77 3.77-3.77a3.776 3.776 0 0 1 3.77 3.773c0 2.08-1.691 3.77-3.77 3.77h-.087l-3.397 2.426l.003.133A2.826 2.826 0 0 1 9 18.587a2.844 2.844 0 0 1-2.775-2.273l-3.838-1.589C3.574 18.923 7.428 22 12.006 22c5.522 0 9.998-4.477 9.998-10S17.527 2 12.005 2M7.08 16.667c.218.452.595.832 1.095 1.041a2.126 2.126 0 0 0 2.78-2.77a2.123 2.123 0 0 0-2.712-1.178l1.269.526a1.565 1.565 0 0 1-1.204 2.889zm10.74-7.245a2.516 2.516 0 0 0-2.513-2.512a2.513 2.513 0 1 0 2.513 2.512M15.312 7.53A1.89 1.89 0 0 1 17.2 9.418a1.89 1.89 0 0 1-1.888 1.888a1.887 1.887 0 1 1 0-3.776"></path></svg>
    )
}

export function SimpleIconsEpicgames({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M3.537 0C2.165 0 1.66.506 1.66 1.879V18.44a4 4 0 0 0 .02.433c.031.3.037.59.316.92c.027.033.311.245.311.245c.153.075.258.13.43.2l8.335 3.491c.433.199.614.276.928.27h.002c.314.006.495-.071.928-.27l8.335-3.492c.172-.07.277-.124.43-.2c0 0 .284-.211.311-.243c.28-.33.285-.621.316-.92a4 4 0 0 0 .02-.434V1.879c0-1.373-.506-1.88-1.878-1.88zm13.366 3.11h.68c1.138 0 1.688.553 1.688 1.696v1.88h-1.374v-1.8c0-.369-.17-.54-.523-.54h-.235c-.367 0-.537.17-.537.539v5.81c0 .369.17.54.537.54h.262c.353 0 .523-.171.523-.54V8.619h1.373v2.143c0 1.144-.562 1.71-1.7 1.71h-.694c-1.138 0-1.7-.566-1.7-1.71V4.82c0-1.144.562-1.709 1.7-1.709zm-12.186.08h3.114v1.274H6.117v2.603h1.648v1.275H6.117v2.774h1.74v1.275h-3.14zm3.816 0h2.198c1.138 0 1.7.564 1.7 1.708v2.445c0 1.144-.562 1.71-1.7 1.71h-.799v3.338h-1.4zm4.53 0h1.4v9.201h-1.4zm-3.13 1.235v3.392h.575c.354 0 .523-.171.523-.54V4.965c0-.368-.17-.54-.523-.54zm-3.74 10.147a1.7 1.7 0 0 1 .591.108a1.8 1.8 0 0 1 .49.299l-.452.546a1.3 1.3 0 0 0-.308-.195a.9.9 0 0 0-.363-.068a.7.7 0 0 0-.28.06a.7.7 0 0 0-.224.163a.8.8 0 0 0-.151.243a.8.8 0 0 0-.056.299v.008a.9.9 0 0 0 .056.31a.7.7 0 0 0 .157.245a.7.7 0 0 0 .238.16a.8.8 0 0 0 .303.058a.8.8 0 0 0 .445-.116v-.339h-.548v-.565H7.37v1.255a2 2 0 0 1-.524.307a1.8 1.8 0 0 1-.683.123a1.6 1.6 0 0 1-.602-.107a1.5 1.5 0 0 1-.478-.3a1.4 1.4 0 0 1-.318-.455a1.4 1.4 0 0 1-.115-.58v-.008a1.4 1.4 0 0 1 .113-.57a1.5 1.5 0 0 1 .312-.46a1.4 1.4 0 0 1 .474-.309a1.6 1.6 0 0 1 .598-.111h.045zm11.963.008a2 2 0 0 1 .612.094a1.6 1.6 0 0 1 .507.277l-.386.546a1.6 1.6 0 0 0-.39-.205a1.2 1.2 0 0 0-.388-.07a.35.35 0 0 0-.208.052a.15.15 0 0 0-.07.127v.008a.16.16 0 0 0 .022.084a.2.2 0 0 0 .076.066a1 1 0 0 0 .147.06q.093.03.236.061a3 3 0 0 1 .43.122a1.3 1.3 0 0 1 .328.17a.7.7 0 0 1 .207.24a.74.74 0 0 1 .071.337v.008a.9.9 0 0 1-.081.382a.8.8 0 0 1-.229.285a1 1 0 0 1-.353.18a1.6 1.6 0 0 1-.46.061a2.2 2.2 0 0 1-.71-.116a1.7 1.7 0 0 1-.593-.346l.43-.514q.416.335.9.335a.46.46 0 0 0 .236-.05a.16.16 0 0 0 .082-.142v-.008a.15.15 0 0 0-.02-.077a.2.2 0 0 0-.073-.066a1 1 0 0 0-.143-.062a3 3 0 0 0-.233-.062a5 5 0 0 1-.413-.113a1.3 1.3 0 0 1-.331-.16a.7.7 0 0 1-.222-.243a.73.73 0 0 1-.082-.36v-.008a.9.9 0 0 1 .074-.359a.8.8 0 0 1 .214-.283a1 1 0 0 1 .34-.185a1.4 1.4 0 0 1 .448-.066zm-9.358.025h.742l1.183 2.81h-.825l-.203-.499H8.623l-.198.498h-.81zm2.197.02h.814l.663 1.08l.663-1.08h.814v2.79h-.766v-1.602l-.711 1.091h-.016l-.707-1.083v1.593h-.754zm3.469 0h2.235v.658h-1.473v.422h1.334v.61h-1.334v.442h1.493v.658h-2.255zm-5.3.897l-.315.793h.624zm-1.145 5.19h8.014l-4.09 1.348z"></path></svg>
    )
}

export function SimpleIconsUbisoft({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M23.561 11.988C23.301-.304 6.954-4.89.656 6.634c.282.206.661.477.943.672a11.8 11.8 0 0 0-.976 3.067a12 12 0 0 0-.184 2.071C.439 18.818 5.621 24 12.005 24s11.556-5.17 11.556-11.556v-.455zm-20.27 2.06c-.152 1.246-.054 1.636-.054 1.788l-.282.098c-.108-.206-.37-.932-.488-1.908C2.163 10.308 4.7 6.96 8.57 6.33c3.544-.52 6.937 1.68 7.728 4.758l-.282.098c-.087-.087-.228-.336-.77-.878c-4.281-4.281-11.002-2.32-11.956 3.74zm11.002 2.081a3.15 3.15 0 0 1-2.59 1.355a3.15 3.15 0 0 1-3.155-3.155a3.16 3.16 0 0 1 2.927-3.144c1.018-.043 1.972.51 2.416 1.398a2.58 2.58 0 0 1-.455 2.95c.293.205.575.4.856.595zm6.58.12c-1.669 3.782-5.106 5.766-8.77 5.712c-7.034-.347-9.083-8.466-4.38-11.393l.207.206c-.076.108-.358.325-.791 1.182c-.51 1.041-.672 2.081-.607 2.732c.369 5.67 8.314 6.83 11.045 1.214C21.057 8.217 11.822.401 3.626 6.374l-.184-.184C5.599 2.808 9.816 1.3 13.837 2.309c6.147 1.55 9.453 7.956 7.035 13.94z"></path></svg>
    )
}

export function RiXboxFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M5.42 19.528A9.96 9.96 0 0 0 12 22a9.97 9.97 0 0 0 6.585-2.472c1.564-1.594-3.597-7.258-6.585-9.515c-2.985 2.257-8.15 7.921-6.582 9.515m9.3-12.005c2.083 2.467 6.236 8.594 5.063 10.76A9.95 9.95 0 0 0 22 12.002a9.96 9.96 0 0 0-2.975-7.113s-.023-.018-.068-.035a.7.7 0 0 0-.234-.038c-.494 0-1.655.362-4.005 2.706M5.045 4.855c-.048.017-.068.034-.072.035A9.96 9.96 0 0 0 2 12.003c0 2.379.832 4.561 2.217 6.278C3.051 16.11 7.201 9.988 9.285 7.523C6.935 5.178 5.772 4.818 5.28 4.818a.6.6 0 0 0-.234.039zM12 4.959S9.546 3.523 7.63 3.455c-.753-.027-1.213.246-1.268.282C8.15 2.539 10.05 2 11.988 2H12c1.945 0 3.838.538 5.638 1.737c-.056-.038-.512-.31-1.266-.282c-1.917.068-4.372 1.5-4.372 1.5z"></path></svg>
    )
}

export function SimpleIconsBattledotnet({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M18.94 8.296C15.9 6.892 11.534 6 7.426 6.332c.206-1.36.714-2.308 1.548-2.508c1.148-.275 2.4.48 3.594 1.854c.782.102 1.71.28 2.355.429C12.747 2.013 9.828-.282 7.607.565c-1.688.644-2.553 2.97-2.448 6.094c-2.2.468-3.915 1.3-5.013 2.495c-.056.065-.181.227-.137.305c.034.058.146-.008.194-.04c1.274-.89 2.904-1.373 5.027-1.676c.303 3.333 1.713 7.56 4.055 10.952c-1.28.502-2.356.536-2.946-.087c-.812-.856-.784-2.318-.19-4.04a27 27 0 0 1-.807-2.254c-2.459 3.934-2.986 7.61-1.143 9.11c1.402 1.14 3.847.725 6.502-.926c1.505 1.672 3.083 2.74 4.667 3.094c.084.015.287.043.332-.034c.034-.06-.08-.124-.131-.149c-1.408-.657-2.64-1.828-3.964-3.515c2.735-1.929 5.691-5.263 7.457-8.988c1.076.86 1.64 1.773 1.398 2.595c-.336 1.131-1.615 1.84-3.403 2.185a28 28 0 0 1-1.548 1.826c4.634.16 8.08-1.22 8.458-3.565c.286-1.786-1.295-3.696-4.053-5.17c.696-2.139.832-4.04.346-5.588c-.029-.08-.106-.27-.196-.27c-.068 0-.067.13-.063.187c.135 1.547-.263 3.2-1.062 5.19zm-8.533 9.869c-1.96-3.145-3.09-6.849-3.082-10.594c3.702-.124 7.474.748 10.714 2.627c-1.743 3.269-4.385 6.1-7.633 7.966z"></path></svg>
    )
}

export function SimpleIconsItchdotio({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M3.13 1.338C2.08 1.96.02 4.328 0 4.95v1.03c0 1.303 1.22 2.45 2.325 2.45c1.33 0 2.436-1.102 2.436-2.41c0 1.308 1.07 2.41 2.4 2.41c1.328 0 2.362-1.102 2.362-2.41c0 1.308 1.137 2.41 2.466 2.41h.024c1.33 0 2.466-1.102 2.466-2.41c0 1.308 1.034 2.41 2.363 2.41c1.33 0 2.4-1.102 2.4-2.41c0 1.308 1.106 2.41 2.435 2.41C22.78 8.43 24 7.282 24 5.98V4.95c-.02-.62-2.082-2.99-3.13-3.612c-3.253-.114-5.508-.134-8.87-.133c-3.362 0-7.945.053-8.87.133m6.376 6.477a2.7 2.7 0 0 1-.468.602c-.5.49-1.19.795-1.947.795a2.8 2.8 0 0 1-1.95-.795a2.6 2.6 0 0 1-.446-.59a2.8 2.8 0 0 1-.486.59a2.8 2.8 0 0 1-1.95.795a.8.8 0 0 1-.264-.052a40 40 0 0 0-.168 2.95v.005l-.006 1.167c.02 2.334-.23 7.564 1.03 8.85c1.952.454 5.545.662 9.15.663c3.605 0 7.198-.21 9.15-.664c1.26-1.284 1.01-6.514 1.03-8.848l-.006-1.167v-.004a40 40 0 0 0-.168-2.95a.9.9 0 0 1-.263.052a2.8 2.8 0 0 1-1.95-.795a2.7 2.7 0 0 1-.486-.59c-.127.22-.265.412-.447.59a2.8 2.8 0 0 1-1.95.794c-.76 0-1.446-.303-1.948-.793a2.7 2.7 0 0 1-.468-.602a2.7 2.7 0 0 1-.463.602a2.8 2.8 0 0 1-1.95.794h-.16a2.8 2.8 0 0 1-1.95-.793a2.7 2.7 0 0 1-.464-.602zm-2.004 2.59v.002c.795.002 1.5 0 2.373.953A20 20 0 0 1 12 11.253c.72 0 1.438.035 2.125.107c.873-.953 1.578-.95 2.372-.953c.376 0 1.876 0 2.92 2.934l1.123 4.028c.832 2.995-.266 3.068-1.636 3.07c-2.03-.075-3.156-1.55-3.156-3.025c-1.124.184-2.436.276-3.748.277c-1.312 0-2.624-.093-3.748-.277c0 1.475-1.125 2.95-3.156 3.026c-1.37-.004-2.468-.077-1.636-3.072l1.122-4.027c1.045-2.934 2.545-2.934 2.92-2.934zM12 12.714c-.002.002-2.14 1.964-2.523 2.662l1.4-.056v1.22c0 .056.56.033 1.123.007c.562.026 1.124.05 1.124-.008v-1.22l1.4.055C14.138 14.677 12 12.713 12 12.713z"></path></svg>
    )
}

//=======================================================| OTHER |=======================================================\\
export function RacingFlagLeft({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="2em" viewBox="0 0 36 12" className={className} {...props}>
            <defs>
                <linearGradient id="paint0_linear_544_605" x1="0" y1="6.5" x2="37" y2="6.5" gradientUnits="userSpaceOnUse">
                    <stop stopColor="transparent" />
                    <stop offset="1" className="text-current dark:text-darkText" stopColor="currentColor" />
                </linearGradient>
            </defs>
            <path
                d="M36 8V12H32V8H36ZM32 0V4H36V0H32ZM24 8V12H28V8H24ZM28 4V8H32V4H28ZM24 0V4H28V0H24ZM16 8V12H20V8H16ZM20 4V8H24V4H20ZM16 0V4H20V0H16ZM8 8V12H12V8H8ZM12 4V8H16V4H12ZM8 0V4H12V0H8ZM0 8V12H4V8H0ZM4 4V8H8V4H4ZM0 0V4H4V0Z"
                fill="url(#paint0_linear_544_605)"
                fillOpacity="0.7"
            />
        </svg>
    )
}

export function RacingFlagRight({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="2em" viewBox="0 0 36 12" className={className} {...props}>
            <defs>
                <linearGradient id="paint0_linear_544_111" x1="0" y1="6.5" x2="37" y2="6.5" gradientUnits="userSpaceOnUse">
                    <stop className="text-current dark:text-darkText" stopColor="currentColor" />
                    <stop offset="1" stopColor="transparent" />
                </linearGradient>
            </defs>
            <path
                d="M36 8V12H32V8H36ZM32 0V4H36V0H32ZM24 8V12H28V8H24ZM28 4V8H32V4H28ZM24 0V4H28V0H24ZM16 8V12H20V8H16ZM20 4V8H24V4H20ZM16 0V4H20V0H16ZM8 8V12H12V8H8ZM12 4V8H16V4H12ZM8 0V4H12V0H8ZM0 8V12H4V8H0ZM4 4V8H8V4H4ZM0 0V4H4V0Z"
                fill="url(#paint0_linear_544_111)"
                fillOpacity="0.7"
            />
        </svg>
    )
}

export function PixelArrowUp({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M11 20H13V8H15V6H13V4H11V6H9V8H11V20ZM7 10V8H9V10H7ZM7 10V12H5V10H7ZM17 10V8H15V10H17ZM17 10V12H19V10H17Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelChevronDown({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M7 8H5V10H7V12H9V14H11V16H13V14H15V12H17V10H19V8H17V10H15V12H13V14H11V12H9V10H7V8Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelHovShapelLeft({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="2em" height="2em" viewBox="0 0 15 15" className={className} {...props}>
            <rect width="5" height="5" fill="currentColor"/>
            <rect x="5" y="5" width="5" height="5" fill="currentColor"/>
            <rect y="10" width="5" height="5" fill="currentColor"/>
            <rect x="10" width="5" height="5" fill="currentColor"/>
        </svg>
    )
}

export function PixelHovShapelRight({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="2em" height="2em" viewBox="0 0 15 15" className={className} {...props}>
            <rect width="5" height="5" fill="currentColor"/>
            <rect x="5" y="5" width="5" height="5" fill="currentColor"/>
            <rect x="10" y="10" width="5" height="5" fill="currentColor"/>
            <rect x="10" width="5" height="5" fill="currentColor"/>
        </svg>
    )
}

export function PixelChevronLeft({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M16 5L16 7L14 7L14 5L16 5ZM12 9L12 7L14 7L14 9L12 9ZM10 11L10 9L12 9L12 11L10 11ZM10 13L8 13L8 11L10 11L10 13ZM12 15L12 13L10 13L10 15L12 15ZM12 15L14 15L14 17L12 17L12 15ZM16 19L16 17L14 17L14 19L16 19Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelChevronRight({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M8 5L8 7L10 7L10 5L8 5ZM12 9L12 7L10 7L10 9L12 9ZM14 11L14 9L12 9L12 11L14 11ZM14 13L16 13L16 11L14 11L14 13ZM12 15L12 13L14 13L14 15L12 15ZM12 15L10 15L10 17L12 17L12 15ZM8 19L8 17L10 17L10 19L8 19Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelEye({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M8 6H16V8H8V6ZM4 10V8H8V10H4ZM2 12V10H4V12H2ZM2 14V12H0V14H2ZM4 16H2V14H4V16ZM8 18H4V16H8V18ZM16 18V20H8V18H16ZM20 16V18H16V16H20ZM22 14V16H20V14H22ZM22 12H24V14H22V12ZM20 10H22V12H20V10ZM20 10V8H16V10H20ZM10 11H14V15H10V11Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelMenu({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M4 6H20V8H4V6ZM4 11.0001H20V13.0001H4V11.0001ZM20 16H4V18H20V16Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelCopy({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M4 2H15V4H6V17H4V2ZM8 6H20V22H8V6ZM10 8V20H18V8H10Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelServer({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M3 3H21V21H3V3ZM5 5V11H19V5H5ZM19 13H5V19H19V13ZM7 7H9V9H7V7ZM9 15H7V17H9V15Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelUpload({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M11 4.99994V3H13V4.99994L15.0001 4.99994V6.99994L17 6.99994V8.99994H15V6.99994L13 6.99994V17H11L11 6.99994H9.00012V8.99994H7.00012V6.99994H9.00009V4.99994L11 4.99994ZM3 15V18.9999V20.9999V21L5 21V20.9999L19 20.9999V21L21 21L21 20.9999V18.9999L21 15H19V18.9999L5 18.9999L5 15H3Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelClose({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M5 5H7V7H5V5ZM9 9H7V7H9V9ZM11 11H9V9H11V11ZM13 11H11V13H9V15H7V17H5V19H7V17H9V15H11V13H13V15H15V17H17V19H19V17H17V15H15V13H13V11ZM15 9V11H13V9H15ZM17 7V9H15V7H17ZM17 7V5H19V7H17Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelScale({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M21.0001 3H21H19.0001H13V5L17.0001 5V7H19.0001V11H21.0001V3ZM16.9999 7H14.9999V9L13 9V11H15V9L16.9999 9V7ZM9.00012 15H11.0001V13H9.00006V15H7.00012V17H9.00012V15ZM5 13V17H6.99988V19H5V19H11.0001V21H5H3.00006H3V13H5Z"
                fill="currentColor"
                fillRule="evenodd"
                clipRule="evenodd"
            />
        </svg>
    )
}

export function PixelDiscord({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="M22,11V8H21V6H20V5H18V4H15V5H9V4H6V5H4V6H3V8H2v3H1v7H3v1H5v1H7V18H6V17H8v1H9v1h6V18h1V17h2v1H17v2h2V19h2V18h2V11ZM9,15H7V14H6V12H7V11H9v1h1v2H9Zm9-1H17v1H15V14H14V12h1V11h2v1h1Z"
                fill="currentColor"
            />
        </svg>
    )
}

export function PixelShare({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 24 24" className={className} {...props}>
            <path
                d="m20,9v-1h1v-2h1v-2h-1v-2h-1v-1h-5v1h-1v2h-1v2h-1v1h-1v1h-1v1h-1v-1h-5v1h-1v2h-1v2h1v2h1v1h5v-1h1v1h1v1h1v1h1v2h1v2h1v1h5v-1h1v-2h1v-2h-1v-2h-1v-1h-5v1h-2v-1h-1v-1h-1v-4h1v-1h1v-1h2v1h5Zm-11,4h-1v1h-3v-1h-1v-2h1v-1h3v1h1v2Zm6,5h1v-1h3v1h1v2h-1v1h-3v-1h-1v-2Zm0-14h1v-1h3v1h1v2h-1v1h-3v-1h-1v-2Z"
                fill="currentColor"
            />
        </svg>
    )
}

export function PixelMonitorSmartPhone({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 1207 1207" className={className} {...props}>
            <g transform="translate(0.000000,1207.000000) scale(0.100000,-0.100000)" fill="currentColor" stroke="none">
                <path d="M0 8520 l0 -3550 2130 0 2130 0 0 -1065 0 -1065 -1065 0 -1065 0 0 -355 0 -355 2130 0 2130 0 0 355 0 355 -710 0 -710 0 0 1065 0 1065 710 0 710 0 0 355 0 355 -2840 0 -2840 0 0 2840 0 2840 3905 0 3905 0 0 -1065 0 -1065 355 0 355 0 0 1420 0 1420 -4615 0 -4615 0 0 -3550z"/>
                <path d="M7100 4260 l0 -4260 2485 0 2485 0 0 4260 0 4260 -2485 0 -2485 0 0 -4260z m4260 0 l0 -3550 -1775 0 -1775 0 0 3550 0 3550 1775 0 1775 0 0 -3550z"/>
            </g>
        </svg>
    )
}

export function PixelCircleDollar({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 1207 1207" className={className} {...props}>
            <g transform="translate(0.000000,1207.000000) scale(0.100000,-0.100000)" fill="currentColor" stroke="none">
                <path d="M4260 11715 l0 -355 -710 0 -710 0 0 -355 0 -355 -355 0 -355 0 0 -355 0 -355 -355 0 -355 0 0 -355 0 -355 -355 0 -355 0 0 -710 0 -710 -355 0 -355 0 0 -1775 0 -1775 355 0 355 0 0 -710 0 -710 355 0 355 0 0 -355 0 -355 355 0 355 0 0 -355 0 -355 355 0 355 0 0 -355 0 -355 710 0 710 0 0 -355 0 -355 1775 0 1775 0 0 355 0 355 710 0 710 0 0 355 0 355 355 0 355 0 0 355 0 355 355 0 355 0 0 355 0 355 355 0 355 0 0 710 0 710 355 0 355 0 0 1775 0 1775 -355 0 -355 0 0 710 0 710 -355 0 -355 0 0 355 0 355 -355 0 -355 0 0 355 0 355 -355 0 -355 0 0 355 0 355 -710 0 -710 0 0 355 0 355 -1775 0 -1775 0 0 -355z m3550 -710 l0 -355 710 0 710 0 0 -355 0 -355 355 0 355 0 0 -355 0 -355 355 0 355 0 0 -710 0 -710 355 0 355 0 0 -1775 0 -1775 -355 0 -355 0 0 -710 0 -710 -355 0 -355 0 0 -355 0 -355 -355 0 -355 0 0 -355 0 -355 -710 0 -710 0 0 -355 0 -355 -1775 0 -1775 0 0 355 0 355 -710 0 -710 0 0 355 0 355 -355 0 -355 0 0 355 0 355 -355 0 -355 0 0 710 0 710 -355 0 -355 0 0 1775 0 1775 355 0 355 0 0 710 0 710 355 0 355 0 0 355 0 355 355 0 355 0 0 355 0 355 710 0 710 0 0 355 0 355 1775 0 1775 0 0 -355z"/>
                <path d="M5680 9585 l0 -355 -710 0 -710 0 0 -355 0 -355 -355 0 -355 0 0 -1065 0 -1065 355 0 355 0 0 -355 0 -355 710 0 710 0 0 -1065 0 -1065 -1065 0 -1065 0 0 -355 0 -355 1065 0 1065 0 0 -355 0 -355 355 0 355 0 0 355 0 355 710 0 710 0 0 355 0 355 355 0 355 0 0 1065 0 1065 -355 0 -355 0 0 355 0 355 -710 0 -710 0 0 1065 0 1065 1065 0 1065 0 0 355 0 355 -1065 0 -1065 0 0 355 0 355 -355 0 -355 0 0 -355z m0 -2130 l0 -1065 -710 0 -710 0 0 1065 0 1065 710 0 710 0 0 -1065z m2130 -2840 l0 -1065 -710 0 -710 0 0 1065 0 1065 710 0 710 0 0 -1065z"/>
            </g>
        </svg>
    )
}

export function PixelAudioLine({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 1207 1207" className={className} {...props}>
            <g transform="translate(0.000000,1207.000000) scale(0.100000,-0.100000)" fill="currentColor" stroke="none">
                <path d="M2840 6035 l0 -6035 355 0 355 0 0 6035 0 6035 -355 0 -355 0 0 -6035z"/>
                <path d="M4260 6035 l0 -5325 355 0 355 0 0 5325 0 5325 -355 0 -355 0 0 -5325z"/>
                <path d="M7100 6035 l0 -5325 355 0 355 0 0 5325 0 5325 -355 0 -355 0 0 -5325z"/>
                <path d="M1420 6035 l0 -3905 355 0 355 0 0 3905 0 3905 -355 0 -355 0 0 -3905z"/>
                <path d="M8520 6035 l0 -3195 355 0 355 0 0 3195 0 3195 -355 0 -355 0 0 -3195z"/>
                <path d="M5680 6035 l0 -2485 355 0 355 0 0 2485 0 2485 -355 0 -355 0 0 -2485z"/>
                <path d="M9940 6035 l0 -2485 355 0 355 0 0 2485 0 2485 -355 0 -355 0 0 -2485z"/>
                <path d="M0 6035 l0 -1775 355 0 355 0 0 1775 0 1775 -355 0 -355 0 0 -1775z"/>
                <path d="M11360 6035 l0 -1065 355 0 355 0 0 1065 0 1065 -355 0 -355 0 0 -1065z"/>
            </g>
        </svg>
    )
}

export function PixelDoubleSword({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 1200 1200" className={className} {...props}>
            <g transform="translate(0.000000,1200.000000) scale(0.100000,-0.100000)" fill="currentColor" stroke="none">
                <path d="M0 10800 l0 -1200 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -900 0 -900 300 0 300 0 0 600 0 600 600 0 600 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -600 0 -600 900 0 900 0 0 900 0 900 -600 0 -600 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 600 0 600 600 0 600 0 0 300 0 300 -900 0 -900 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -1200 0 -1200 0 0 -1200z m2400 300 l0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -600 0 -600 -300 0 -300 0 0 -300 0 -300 -600 0 -600 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 900 0 900 900 0 900 0 0 -300z m9000 -10200 l0 -300 -300 0 -300 0 0 300 0 300 300 0 300 0 0 -300z"/>
                <path d="M9600 11700 l0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 900 0 900 0 0 -900 0 -900 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 300 0 300 0 0 1200 0 1200 -1200 0 -1200 0 0 -300z"/>
                <path d="M1800 5100 l0 -300 600 0 600 0 0 -600 0 -600 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -600 0 -600 0 0 -900 0 -900 900 0 900 0 0 600 0 600 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 600 0 600 0 0 -600 0 -600 300 0 300 0 0 900 0 900 -600 0 -600 0 0 300 0 300 -300 0 -300 0 0 600 0 600 -900 0 -900 0 0 -300z m-600 -4200 l0 -300 -300 0 -300 0 0 300 0 300 300 0 300 0 0 -300z"/>
            </g>
        </svg>
    )
}

export function PixelTrophy({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 1207 1207" className={className} {...props}>
            <g transform="translate(0.000000,1207.000000) scale(0.100000,-0.100000)" fill="currentColor" stroke="none">
                <path d="M1420 11005 l0 -1065 -710 0 -710 0 0 -1775 0 -1775 710 0 710 0 0 -355 0 -355 355 0 355 0 0 -355 0 -355 355 0 355 0 0 -355 0 -355 355 0 355 0 0 -355 0 -355 355 0 355 0 0 -710 0 -710 -355 0 -355 0 0 -355 0 -355 -355 0 -355 0 0 -355 0 -355 -710 0 -710 0 0 -355 0 -355 4615 0 4615 0 0 355 0 355 -710 0 -710 0 0 355 0 355 -355 0 -355 0 0 355 0 355 -355 0 -355 0 0 710 0 710 355 0 355 0 0 355 0 355 355 0 355 0 0 355 0 355 355 0 355 0 0 355 0 355 355 0 355 0 0 355 0 355 710 0 710 0 0 1775 0 1775 -710 0 -710 0 0 1065 0 1065 -4615 0 -4615 0 0 -1065z m8520 -2485 l0 -2840 -355 0 -355 0 0 -355 0 -355 -3195 0 -3195 0 0 355 0 355 -355 0 -355 0 0 2840 0 2840 3905 0 3905 0 0 -2840z m-8520 -355 l0 -1065 -355 0 -355 0 0 1065 0 1065 355 0 355 0 0 -1065z m9940 0 l0 -1065 -355 0 -355 0 0 1065 0 1065 355 0 355 0 0 -1065z m-4260 -4970 l0 -1065 -1065 0 -1065 0 0 1065 0 1065 1065 0 1065 0 0 -1065z m1420 -2130 l0 -355 -2485 0 -2485 0 0 355 0 355 2485 0 2485 0 0 -355z"/>
                <path d="M5680 3195 l0 -355 355 0 355 0 0 355 0 355 -355 0 -355 0 0 -355z"/>
            </g>
        </svg>
    )
}

export function PixelCrown({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="6em" height="6em" viewBox="0 0 1200 1200" className={className} {...props}>
            <g transform="translate(0.000000,1200.000000) scale(0.100000,-0.100000)" fill="currentColor" stroke="none">
                <path d="M5400 11700 l0 -300 -300 0 -300 0 0 -600 0 -600 300 0 300 0 0 -600 0 -600 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 600 0 600 -300 0 -300 0 0 600 0 600 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 -4800 0 -4800 300 0 300 0 0 -600 0 -600 300 0 300 0 0 -300 0 -300 4800 0 4800 0 0 300 0 300 300 0 300 0 0 600 0 600 300 0 300 0 0 4800 0 4800 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -600 0 -600 -300 0 -300 0 0 -600 0 -600 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 600 0 600 300 0 300 0 0 600 0 600 -300 0 -300 0 0 300 0 300 -600 0 -600 0 0 -300z m600 -600 l0 -300 300 0 300 0 0 -300 0 -300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 300 0 300 0 0 -300z m-4800 -1500 l0 -600 300 0 300 0 0 -600 0 -600 300 0 300 0 0 -300 0 -300 900 0 900 0 0 300 0 300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 600 0 600 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 900 0 900 0 0 300 0 300 300 0 300 0 0 600 0 600 300 0 300 0 0 600 0 600 300 0 300 0 0 -3900 0 -3900 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -300 0 -300 -4200 0 -4200 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 3900 0 3900 300 0 300 0 0 -600z"/>
                <path d="M5400 6900 l0 -300 -300 0 -300 0 0 -300 0 -300 -300 0 -300 0 0 -1200 0 -1200 300 0 300 0 0 -300 0 -300 1200 0 1200 0 0 300 0 300 300 0 300 0 0 1200 0 1200 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -600 0 -600 0 0 -300z m1200 -1200 l0 -300 300 0 300 0 0 -600 0 -600 -300 0 -300 0 0 -300 0 -300 -600 0 -600 0 0 300 0 300 -300 0 -300 0 0 600 0 600 300 0 300 0 0 300 0 300 600 0 600 0 0 -300z"/>
                <path d="M5400 5100 l0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 -300z"/>
                <path d="M1800 4500 l0 -300 -300 0 -300 0 0 -600 0 -600 300 0 300 0 0 -300 0 -300 600 0 600 0 0 300 0 300 300 0 300 0 0 600 0 600 -300 0 -300 0 0 300 0 300 -600 0 -600 0 0 -300z"/>
                <path d="M9000 4500 l0 -300 -300 0 -300 0 0 -600 0 -600 300 0 300 0 0 -300 0 -300 600 0 600 0 0 300 0 300 300 0 300 0 0 600 0 600 -300 0 -300 0 0 300 0 300 -600 0 -600 0 0 -300z"/>
                <path d="M3000 10500 l0 -300 -300 0 -300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 -300z m600 -600 l0 -300 -300 0 -300 0 0 300 0 300 300 0 300 0 0 -300z"/>
                <path d="M8400 10500 l0 -300 -300 0 -300 0 0 -300 0 -300 300 0 300 0 0 -300 0 -300 300 0 300 0 0 300 0 300 300 0 300 0 0 300 0 300 -300 0 -300 0 0 300 0 300 -300 0 -300 0 0 -300z m600 -600 l0 -300 -300 0 -300 0 0 300 0 300 300 0 300 0 0 -300z"/>
            </g>
        </svg>
    )
}

export function RiVerifiedBadgeFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="0.7em" height="0.7em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M10.007 2.104a3 3 0 0 0-3.595 1.49L5.606 5.17a1 1 0 0 1-.436.436l-1.577.806a3 3 0 0 0-1.49 3.595l.546 1.685a1 1 0 0 1 0 .616l-.545 1.685a3 3 0 0 0 1.49 3.595l1.576.806a1 1 0 0 1 .436.436l.806 1.577a3 3 0 0 0 3.595 1.49l1.685-.546a1 1 0 0 1 .616 0l1.685.545a3 3 0 0 0 3.595-1.489l.806-1.577a1 1 0 0 1 .436-.436l1.577-.805a3 3 0 0 0 1.49-3.596l-.546-1.685a1 1 0 0 1 0-.616l.545-1.685a3 3 0 0 0-1.489-3.595l-1.577-.806a1 1 0 0 1-.436-.436l-.805-1.577a3 3 0 0 0-3.596-1.49l-1.685.546a1 1 0 0 1-.616 0zM6.76 11.757l1.414-1.414l2.828 2.829l5.657-5.657l1.415 1.414l-7.072 7.07z"></path></svg>
    )
}

export function FlowbiteArrowUpRightFromSquareSolid({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><g fill="currentColor" fillRule="evenodd" clipRule="evenodd"><path d="M11.403 5H5a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-6.403a3 3 0 0 1-1.743-1.612l-3.025 3.025A3 3 0 1 1 9.99 9.768l3.025-3.025A3 3 0 0 1 11.403 5"></path><path d="M13.232 4a1 1 0 0 1 1-1H20a1 1 0 0 1 1 1v5.768a1 1 0 1 1-2 0V6.414l-6.182 6.182a1 1 0 0 1-1.414-1.414L17.586 5h-3.354a1 1 0 0 1-1-1"></path></g></svg>
    )
}

export function FluentWindowHeaderHorizontalOff20Filled({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 20 20" className={className} {...props}><path fill="currentColor" d="M2.854 2.146a.5.5 0 1 0-.708.708L3.414 4.12A2.5 2.5 0 0 0 3 5.5v9A2.5 2.5 0 0 0 5.5 17h9c.51 0 .983-.152 1.379-.414l1.267 1.268a.5.5 0 0 0 .708-.708zm11.905 13.32a1 1 0 0 1-.259.034h-9a1 1 0 0 1-1-1V7h1.793zM15.5 7v6.379l1.475 1.475Q17 14.68 17 14.5v-9A2.5 2.5 0 0 0 14.5 3h-9q-.18 0-.354.025L9.121 7z"></path></svg>
    )
}

export function RiGlobalFill({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.5em" height="1.5em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M2.05 13h5.477a17.9 17.9 0 0 0 2.925 8.88A10.005 10.005 0 0 1 2.049 13m0-2a10.005 10.005 0 0 1 8.402-8.881a17.9 17.9 0 0 0-2.925 8.88zm19.9 0h-5.477a17.9 17.9 0 0 0-2.925-8.881a10.005 10.005 0 0 1 8.403 8.88m0 2a10.005 10.005 0 0 1-8.402 8.88A17.9 17.9 0 0 0 16.473 13zM9.53 13h4.94A15.9 15.9 0 0 1 12 20.592A15.9 15.9 0 0 1 9.53 13m0-2A15.9 15.9 0 0 1 12 3.408A15.9 15.9 0 0 1 14.47 11z"></path></svg>
    )
}

export function IcBaselineRemoveRedEye({ className, props }: { className?: string, props?: React.SVGProps<SVGSVGElement> }) {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="1.2em" height="1.2em" viewBox="0 0 24 24" className={className} {...props}><path fill="currentColor" d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5s5 2.24 5 5s-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3s3-1.34 3-3s-1.34-3-3-3"></path></svg>
    )
}